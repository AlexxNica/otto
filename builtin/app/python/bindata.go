// Code generated by go-bindata.
// sources:
// data/aws-simple/build/build-python.sh.tpl
// data/aws-simple/build/template.json.tpl
// data/aws-simple/deploy/main.tf.tpl
// data/aws-vpc-public-private/build/build-python.sh.tpl
// data/aws-vpc-public-private/deploy/main.tf.tpl
// data/common/dev/Vagrantfile.tpl
// DO NOT EDIT!

package pythonapp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataAwsSimpleBuildBuildPythonShTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\xeb\x6e\xdb\x38\x13\xfd\xaf\xa7\x98\x2a\xc6\xd7\x04\x28\xad\x24\xdf\x5e\x8a\xa4\x29\xb6\x4d\xdd\x26\x40\x21\x17\x4e\xba\xdb\xa2\x0d\x0c\x5a\x1a\xdb\xdc\xc8\x24\x43\x52\xbe\x34\xeb\x77\xdf\x21\x25\xcb\x71\xec\x06\x9b\xfc\xb0\x34\x9a\xcb\xe1\x99\xe1\x21\xf7\x9e\x25\x03\x21\x93\x01\xb7\xe3\x28\xb2\xe8\x80\x29\x90\xaa\x94\xf5\x23\x1a\x83\x73\x11\x1e\xb5\xd0\x38\xe4\xa2\xa8\xcd\xce\xf0\x0c\xa3\x88\x9e\x94\xd9\x3f\x80\xfb\x08\x00\x0a\x95\xf1\x02\xac\x2a\x4d\x86\x43\x51\xe0\x59\xeb\x68\x6d\x2e\x84\x44\xa9\xce\x5a\xc7\xde\x84\xd9\x58\x41\xdc\xe9\xf5\xba\x3d\xe0\x0e\x5a\xf7\xeb\xa0\xe5\x49\xeb\xbe\xf2\x5d\x9e\xc2\x47\x6e\x1d\xc5\x8f\xec\x49\xec\xc3\x46\x06\x35\x28\xe7\x14\x24\x53\x6e\x12\xfa\x90\xd8\x85\xa5\x1f\xf8\x07\x5c\xc0\x26\xe1\xf8\x30\x5a\x46\x84\x4e\xc3\xf3\x00\x0e\xe2\xd6\xfd\xdb\x37\x57\x17\xfd\xab\xee\xe7\xde\x79\x67\x19\x7b\xc3\xc7\xcb\xb4\x93\x76\x97\xf1\x73\x20\x0c\x51\xa4\xd0\x2f\x81\x3e\xfc\x11\xc3\xf1\xeb\xff\x1d\x51\x3a\x4a\x3a\x42\x03\xcc\x55\xf5\x5e\x43\x92\xe3\x34\x91\x65\x51\x9c\xc2\x32\x52\x45\x08\xa8\x96\xf1\xcd\x7b\xdc\x00\x05\xfb\x4f\xd1\x1e\x64\x85\x2a\x73\x96\x29\x39\x14\x23\xc8\xb8\x04\x21\x1d\x9a\x21\x1a\x84\x99\x70\x63\xe0\xda\x41\xa6\x26\x13\x2e\x73\x0b\x62\x08\xc2\x3d\xb7\x60\x9d\x28\x0a\xf2\x04\x6d\x14\xad\xd3\x5a\x2a\x02\xf1\x5f\x5c\x38\x21\x47\x30\xa4\x85\x6c\xa4\x25\x4c\x94\x42\x17\xe8\xb0\xdd\x6e\xc7\x51\x29\x29\x1e\xbe\x7d\x03\x36\xac\xc9\x11\x83\x24\x44\x24\x42\x5a\xc7\x65\x86\xc9\x40\x29\xc7\x86\x42\x0a\x3b\xc6\x1c\x6e\x6e\x4e\x21\x57\x44\xab\x2d\x90\x68\x3d\x6c\xff\x1a\xe5\x4a\x52\x4f\x7d\xdd\x37\x79\xee\xcb\x7a\xa4\xc4\xb9\xb2\xc2\x29\x23\xd0\x02\x41\x86\x52\xe7\xdc\x83\x0a\x75\x15\x82\x2d\x73\xe5\x3d\xd9\x88\x86\x26\x7c\xc4\x2d\x73\xc0\x40\xeb\x63\x0b\xd0\x0b\x37\x56\x92\x59\x35\x74\x33\x6e\x90\xd1\x7a\x35\x1a\xe7\xb3\xef\xb0\x31\x4f\x94\x92\x21\x11\x75\x55\x5a\xad\x8c\x63\x63\xe7\xb4\x5d\x17\xc9\x73\xe6\xbf\x37\x48\x17\xa1\x8e\xe6\x27\xc3\x5b\x43\x1d\xa3\xd6\xf1\xdc\x4a\x7e\x8b\xf6\x67\x78\x23\x9c\xfb\xc4\xf0\xe9\xeb\xf5\x45\x37\xed\xff\xd9\xe9\x5d\x5d\x76\xd3\xb3\xf8\xfe\xbe\xc6\xdb\x9f\xa2\xb1\x82\x80\x2c\x97\xf1\x23\xe7\x4e\x7a\xdd\xfb\xfa\xa9\x7b\x99\x5e\x3f\xf4\x47\xe9\xcc\x42\x2b\x6a\x7d\x08\x09\xac\x5e\x56\x2c\x78\x66\x3f\x05\xaf\x17\x90\x8e\x84\x9c\xbf\x08\xbc\x2a\x37\xa6\x89\xd3\x3c\xbb\xe5\x23\xb4\x81\xdd\xba\xd0\xbb\xce\xdb\xcb\x37\x69\xff\x7d\xaf\x9b\x5e\x77\xd2\x77\x67\x52\xc9\x30\x52\x3c\x73\x62\xfa\x24\xd9\x83\x1f\x06\x46\xb4\x81\x27\x68\xb2\xd2\x08\xda\x87\x83\x52\x14\x39\xa3\xf9\x22\x80\xfe\xfd\x3b\x4d\x00\xcd\x8a\xbe\x63\x34\xe0\xf0\x83\x1e\x8f\x46\xe1\xf1\x89\x66\xf8\x18\xa9\x72\xfc\xdb\xae\xc2\xed\x5d\x21\x1c\xfe\x3f\x04\x7a\x53\x45\x42\x6b\x93\xce\xdd\xd6\x26\x46\x7a\x2a\x18\xce\xa9\xcd\x36\xda\x22\x8c\xf4\x27\xb0\x34\x15\xc6\x95\xbc\x40\x39\xdd\x98\x3f\xaf\x60\xc0\x32\x88\x77\x57\x7e\xb5\x3f\xf3\xcc\xb0\x3b\x60\x5d\x60\x10\xe6\xe7\x24\x09\x3b\xc2\x7a\xb1\x68\xeb\x85\xe6\x6d\xa1\x12\xf2\x62\x54\x8a\xde\x0f\xd6\xc9\xd9\x45\x28\xbf\xe2\x75\x0d\xa1\x42\x79\x6e\x30\x6c\x88\xc7\xd8\x42\xec\xda\xc6\x1e\x83\x4a\xac\x99\x26\x5e\x3c\x68\x7a\x75\x32\x6d\xf2\xd5\xab\x86\x51\x29\x45\xa6\x8c\x0c\xc9\xf6\x60\x86\x0d\x82\xd2\xae\x28\x21\x1d\xb0\xa5\x0e\x53\xc2\x0b\x1a\x09\x49\xd3\x5c\xf3\x0c\xf5\xc8\xae\x87\x7e\xbb\x60\x50\x7f\x9f\x87\x96\x28\x1e\x95\xad\xc0\x74\x7c\x3f\x32\x57\xa9\x81\x5e\xaf\x6b\x72\x9b\x0b\xd2\x47\xfd\x28\xa9\x35\x59\x53\xce\x71\x03\x73\x92\x23\x37\xd1\x8d\x43\xdb\x8d\x7e\x00\x3b\xdf\x11\xb5\xa9\x3b\xba\x10\x19\x91\x4a\xab\x28\x2d\x9a\x4d\xa9\xc9\x73\x6f\x03\xc6\x72\x61\xf9\xa0\xc0\x9c\x69\x6e\xed\x4c\x99\x9c\x6c\x23\xcc\x94\x85\x38\x86\x55\xf2\x2a\xf1\x15\xba\xb0\x06\x9a\xe4\x89\xb0\x81\x96\x8d\xa4\xa4\xe4\x33\x09\xac\xd7\x84\x9d\x6c\x42\xac\x3b\x1d\xc4\x97\x36\x12\x65\xda\xe8\x0e\x61\x85\x57\xaf\x3e\x7c\x4e\x2f\xcf\xbb\xbd\x94\xce\x8f\x8a\x00\x44\x48\xd0\x65\x24\xc1\xc2\x25\x4d\x80\x97\xf0\x87\x27\x4a\x94\xa3\xcd\x8c\xd0\x61\xb9\xf1\xca\x8d\x34\x83\xfa\x41\x7d\x25\xe3\xbe\x3f\x19\xe9\xa8\x73\x38\x39\x20\xab\xd2\xde\x68\x4a\x59\xe0\x14\x49\xf5\x0f\x8f\x7e\xbb\x89\x22\x3a\x34\x34\x9f\x49\x7f\x8c\x97\x22\x5f\xaf\x9f\xde\x47\x0f\xdf\xb3\xb1\xef\xdc\x8e\x06\xe0\x1c\xb3\x9f\xcd\xc8\x0a\x15\xb0\x19\xfc\x02\xad\x2d\xe9\x8b\xa2\xd5\xe2\xb7\x99\x0a\x1b\x3b\xd0\x44\x53\x9c\x22\x9d\x3d\x34\xb5\x06\x27\x6a\x8a\xe0\xc6\xc2\xeb\x7e\xe5\x43\x46\x12\x6a\xa0\xbb\x00\x90\x8e\x63\x35\x68\x66\x52\x71\x18\x3c\x12\x6f\xb7\x0c\x65\xe8\x3b\x31\x38\xe4\x65\xe1\xa2\x9a\xff\xf4\xc3\x65\xfa\xe5\xbc\x9b\xbe\xdf\x6a\xc0\xae\xe0\x66\x24\xb7\xfa\xb1\x07\x1f\x50\x92\xbc\x3a\x82\x3a\x58\x40\x97\x1c\x89\x45\x43\xfb\xa9\xba\xe8\x90\xe2\x51\x2b\x24\xbc\x3c\x3c\xad\x5e\x55\x3d\xab\x49\xfd\xdd\xff\x91\x6c\xce\x17\x7d\x3f\x99\x41\x6e\x48\x6d\x8e\x8e\x7f\x6f\x1f\xd2\xff\xd1\xc9\xcb\xc3\xc3\x3a\x74\xed\x49\x6d\xea\x8f\x69\xfd\x54\xe4\x42\xd1\xb5\xe7\x7b\x6b\x4c\x3f\x4f\x78\x7d\x61\xef\x95\x21\x85\xce\xfd\x2f\xb9\x57\x0e\xb4\x3b\xfa\xf3\xfe\xb0\xfa\x82\xb9\x7f\xaa\x72\x2c\xe9\x5e\xd4\x10\xb4\x25\xaf\x74\xf6\x34\xfb\x9b\xae\x24\xf5\x45\xe2\xf1\x8c\x24\x7e\xb6\xbc\x38\x86\xdb\x03\xc5\xc8\x90\x7a\xbf\x01\x99\xe5\x10\xfc\x36\x06\x6b\xf5\xb1\x91\xd3\xb2\x19\xc6\x9f\x4a\x52\xa5\x60\x4d\xb9\x5a\x9b\x42\xaa\x83\x68\x28\x9e\xc2\x68\xf0\xae\x14\x34\x5e\x74\xc0\xd9\xb6\x9b\xbb\x4d\xac\x0f\x34\xfd\xbf\xe0\x78\x20\xfb\x6c\xc7\xa6\xd9\x2a\xe6\xb1\x05\x6e\x89\x49\x7f\x9d\x7a\x16\x47\xff\x06\x00\x00\xff\xff\xf4\x18\x1b\x76\x64\x0b\x00\x00"

func dataAwsSimpleBuildBuildPythonShTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleBuildBuildPythonShTpl,
		"data/aws-simple/build/build-python.sh.tpl",
	)
}

func dataAwsSimpleBuildBuildPythonShTpl() (*asset, error) {
	bytes, err := dataAwsSimpleBuildBuildPythonShTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/build/build-python.sh.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsSimpleBuildTemplateJsonTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xdd\x8e\x9b\x3c\x14\xbc\xe7\x29\x2c\xa4\xec\x55\x80\x7c\xdf\xae\xaa\xaa\xb7\x7d\x8c\x55\xc4\x1a\xf0\x06\x2b\xfe\x93\x8f\x49\x95\x45\x7e\xf7\x1e\x9b\xdf\x54\x1b\x36\x6d\x6e\x8c\x3c\xc3\xcc\x78\x38\x4e\x9f\x10\xfc\xa5\x92\xab\xd2\xd0\xfa\xcc\x6c\x79\x61\x16\xb8\x56\xe9\x0f\x92\x1e\xf2\xef\xf9\x21\xdd\x27\x03\xe7\x42\x2d\xa7\x95\x60\x80\xd0\xf0\x1a\x6e\xd2\x5f\x50\xd2\xba\x66\x00\xe5\x99\x5d\x11\x51\x9d\x10\xfb\x35\x0a\xac\xb6\xcc\xdd\x43\x2d\x3b\x0d\x66\x37\x08\x88\xee\x84\x79\x5c\x3b\x02\x71\xdf\x4f\x41\x8c\xd5\x17\x1e\x32\x62\x52\x24\xbc\x8e\x6f\xf5\x3b\xf2\xae\x2d\x69\xb8\x25\x5c\xe1\x63\xa7\x1a\xea\x90\x55\xe2\x0e\xe4\x55\xc7\x45\x43\x76\x7e\x22\x8f\x2b\xca\xb9\xab\x61\xe1\xb4\xd0\x32\x21\xd2\xfd\x02\x70\x25\xb8\x0a\xd0\x6b\x2a\xcf\x41\x36\x33\xa4\x70\xd2\x14\xda\x39\x5d\x2c\x06\x59\xdf\x07\x67\xa1\xb5\xc9\x7f\xe2\xae\x63\x96\x78\x9f\x1e\x47\x25\xbf\xbf\xef\xf9\xce\x05\x5b\x5b\x82\xee\x6c\x1d\x11\xd4\x0c\x96\xde\x17\x6b\xbc\x61\xe0\xb8\x8a\xae\x81\xf4\x17\x69\x1e\x08\xb3\x55\x40\xdd\x3c\x7a\x74\xef\xc9\xd3\x13\xa9\x28\xb4\x24\x2f\x24\xe5\x2a\x87\xf6\x93\x2e\x76\x84\xa9\x26\x7c\xaf\xad\x4f\xb2\x51\xcf\x8e\xe0\xa0\x56\x18\x42\xa2\x02\xa6\xe8\x00\xcf\xf9\x36\x0f\xce\x1b\x9e\x79\xf0\x58\xd1\x1e\x69\x32\xa3\xc6\xe4\xee\xf4\xf1\x4f\x85\x41\x6d\xb9\x71\x01\x8a\xe3\x96\x99\xab\x6b\x75\x2c\x60\x52\x8b\xeb\x71\x9a\xe4\xc8\x1a\xa7\x78\xbe\x52\x8a\xca\xa8\x1e\xd2\xcc\xe2\xb3\x27\x95\xf4\x03\x7b\x67\x15\x2c\xd8\xcd\x05\xbc\x57\xcd\xed\x4d\xdd\xee\x27\xbd\xb9\xb4\x5b\x8a\x0b\xf1\x0b\xc5\xf9\xa2\x6f\xa9\x0d\xa4\xaf\xb2\xc5\x21\x28\xa9\xe4\x43\x1f\x3c\xfb\xff\xbf\x6f\xcf\x87\xe6\xe5\x65\xe1\x70\x05\x8e\x2a\x64\x4d\xb5\xd5\xcf\xb9\xa0\xf6\xc4\x56\x32\xd0\x96\xc1\x79\xaa\xbb\xab\x70\x7c\xbb\x55\xa9\x92\x97\x13\xd6\xf7\xe1\x09\x27\xfb\xcf\xec\xb8\xe2\x1c\x51\x69\x3e\x4b\x3c\xfc\x6b\x1d\x93\xc4\x27\xbf\x03\x00\x00\xff\xff\x6a\x06\xa6\x95\x67\x05\x00\x00"

func dataAwsSimpleBuildTemplateJsonTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleBuildTemplateJsonTpl,
		"data/aws-simple/build/template.json.tpl",
	)
}

func dataAwsSimpleBuildTemplateJsonTpl() (*asset, error) {
	bytes, err := dataAwsSimpleBuildTemplateJsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/build/template.json.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsSimpleDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xc1\x8e\xdb\x20\x10\xbd\xe7\x2b\x46\x74\x8f\x5d\x27\xed\xb1\x52\xcf\xbd\xb5\x1f\x50\xad\x10\xc6\x24\x45\x8b\x01\xc1\x90\xca\xb2\xfc\xef\x1d\xa0\x16\xc1\xbb\xbd\x36\x39\xf9\xcd\x63\xde\xcc\x9b\xf7\x01\xbe\x29\xab\x82\x40\x35\xc1\xb8\xc0\x0f\x44\xf7\x11\x26\x07\xd6\x21\xa8\x49\x23\xcc\xc2\x26\x61\xcc\x72\x3a\xdd\x45\xd0\x62\x34\x0a\x98\xb6\xd7\x20\xb8\x9e\x18\xac\xdb\x03\x2c\x7e\x47\x2e\xa4\x54\x31\xf2\x57\xb5\xbc\x53\x8c\x4a\x06\x85\xff\x28\x06\x75\xd3\xce\x1e\x0a\x44\xe5\x56\xcc\xaa\xc0\x8f\x0f\x66\x7d\x60\x6a\x1b\x51\x58\xa9\x38\x2e\x3e\xd3\x61\x52\x57\x91\x0c\xc2\x57\x60\xf8\x79\x98\xb5\x0c\x8e\xc1\xe3\x8b\x98\x46\x4b\xd3\xf8\x34\x1a\x2d\x0f\xdd\xee\x5e\x72\xa9\xa7\xf0\x0e\xfc\x77\xed\x93\x0f\xee\xae\x27\x15\xca\xf4\x04\x9d\x00\xda\xf2\x59\xf5\x69\xa5\x87\x43\x6f\xca\xc6\x88\xd6\x6c\xe8\x69\x0d\x2f\xb4\x6a\x08\xe4\x5f\x47\xab\x38\x51\x68\x88\xa0\xa2\x4b\x41\x36\x7f\x53\xd0\xb8\xf0\x5b\x70\xc9\x33\x02\xbd\xaf\x93\x65\x0f\x6b\x9f\x75\xad\x1f\xdb\xf6\x5c\x5b\xee\xc7\x2c\x9a\x75\xc1\xa6\x57\xbf\xa9\x44\x35\x6d\x6f\x24\x17\x4b\x3f\x00\x5a\x1f\x9d\x74\xa6\x8e\xf7\xfc\xa9\x80\xd7\xe0\x66\xee\x5d\xc0\x02\x5e\x0a\x86\x6e\x47\x1a\x96\xad\xe5\xa3\x71\xf2\x35\x12\xf6\x93\x5d\x86\xf2\x3f\x5f\xd8\x0b\xd5\xb7\xac\xa6\xfe\x9b\xd8\x1b\x1b\xf7\x28\x3d\x1a\x48\x81\x83\xf6\x6b\xf7\x98\x75\xf1\xad\x4b\x5f\x2b\x77\x70\xbd\x7d\x0d\x1d\x79\xdc\xf5\xe9\xb2\x58\x88\x7b\xf2\x0f\x82\x3b\x5c\x4f\x92\xcf\xd3\x1f\x9d\x3a\xd7\x2d\x9f\xd6\xb7\x89\x18\x68\x9d\x21\x9f\xf3\x25\x3f\x46\x71\x23\x7f\xe1\x7b\x16\xe9\x82\xc1\xaa\x29\x2e\xa1\x4f\x08\x2c\x05\x53\x3d\xb8\x0b\x93\x0a\xf5\x17\xa2\xff\x72\x3e\x57\x89\x7d\xc7\xd2\xbc\x2e\xc0\x27\x1b\xb7\x73\x0e\xe8\x9f\x00\x00\x00\xff\xff\x5f\x73\x79\x4b\x5f\x04\x00\x00"

func dataAwsSimpleDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleDeployMainTfTpl,
		"data/aws-simple/deploy/main.tf.tpl",
	)
}

func dataAwsSimpleDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsSimpleDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateBuildBuildPythonShTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\xeb\x6e\xdb\x38\x13\xfd\xaf\xa7\x98\x2a\xc6\xd7\x04\x28\xad\x24\xdf\x5e\x8a\xa4\x29\xb6\x4d\xdd\x26\x40\x21\x17\x4e\xba\xdb\xa2\x0d\x0c\x5a\x1a\xdb\xdc\xc8\x24\x43\x52\xbe\x34\xeb\x77\xdf\x21\x25\xcb\x71\xec\x06\x9b\xfc\xb0\x34\x9a\xcb\xe1\x99\xe1\x21\xf7\x9e\x25\x03\x21\x93\x01\xb7\xe3\x28\xb2\xe8\x80\x29\x90\xaa\x94\xf5\x23\x1a\x83\x73\x11\x1e\xb5\xd0\x38\xe4\xa2\xa8\xcd\xce\xf0\x0c\xa3\x88\x9e\x94\xd9\x3f\x80\xfb\x08\x00\x0a\x95\xf1\x02\xac\x2a\x4d\x86\x43\x51\xe0\x59\xeb\x68\x6d\x2e\x84\x44\xa9\xce\x5a\xc7\xde\x84\xd9\x58\x41\xdc\xe9\xf5\xba\x3d\xe0\x0e\x5a\xf7\xeb\xa0\xe5\x49\xeb\xbe\xf2\x5d\x9e\xc2\x47\x6e\x1d\xc5\x8f\xec\x49\xec\xc3\x46\x06\x35\x28\xe7\x14\x24\x53\x6e\x12\xfa\x90\xd8\x85\xa5\x1f\xf8\x07\x5c\xc0\x26\xe1\xf8\x30\x5a\x46\x84\x4e\xc3\xf3\x00\x0e\xe2\xd6\xfd\xdb\x37\x57\x17\xfd\xab\xee\xe7\xde\x79\x67\x19\x7b\xc3\xc7\xcb\xb4\x93\x76\x97\xf1\x73\x20\x0c\x51\xa4\xd0\x2f\x81\x3e\xfc\x11\xc3\xf1\xeb\xff\x1d\x51\x3a\x4a\x3a\x42\x03\xcc\x55\xf5\x5e\x43\x92\xe3\x34\x91\x65\x51\x9c\xc2\x32\x52\x45\x08\xa8\x96\xf1\xcd\x7b\xdc\x00\x05\xfb\x4f\xd1\x1e\x64\x85\x2a\x73\x96\x29\x39\x14\x23\xc8\xb8\x04\x21\x1d\x9a\x21\x1a\x84\x99\x70\x63\xe0\xda\x41\xa6\x26\x13\x2e\x73\x0b\x62\x08\xc2\x3d\xb7\x60\x9d\x28\x0a\xf2\x04\x6d\x14\xad\xd3\x5a\x2a\x02\xf1\x5f\x5c\x38\x21\x47\x30\xa4\x85\x6c\xa4\x25\x4c\x94\x42\x17\xe8\xb0\xdd\x6e\xc7\x51\x29\x29\x1e\xbe\x7d\x03\x36\xac\xc9\x11\x83\x24\x44\x24\x42\x5a\xc7\x65\x86\xc9\x40\x29\xc7\x86\x42\x0a\x3b\xc6\x1c\x6e\x6e\x4e\x21\x57\x44\xab\x2d\x90\x68\x3d\x6c\xff\x1a\xe5\x4a\x52\x4f\x7d\xdd\x37\x79\xee\xcb\x7a\xa4\xc4\xb9\xb2\xc2\x29\x23\xd0\x02\x41\x86\x52\xe7\xdc\x83\x0a\x75\x15\x82\x2d\x73\xe5\x3d\xd9\x88\x86\x26\x7c\xc4\x2d\x73\xc0\x40\xeb\x63\x0b\xd0\x0b\x37\x56\x92\x59\x35\x74\x33\x6e\x90\xd1\x7a\x35\x1a\xe7\xb3\xef\xb0\x31\x4f\x94\x92\x21\x11\x75\x55\x5a\xad\x8c\x63\x63\xe7\xb4\x5d\x17\xc9\x73\xe6\xbf\x37\x48\x17\xa1\x8e\xe6\x27\xc3\x5b\x43\x1d\xa3\xd6\xf1\xdc\x4a\x7e\x8b\xf6\x67\x78\x23\x9c\xfb\xc4\xf0\xe9\xeb\xf5\x45\x37\xed\xff\xd9\xe9\x5d\x5d\x76\xd3\xb3\xf8\xfe\xbe\xc6\xdb\x9f\xa2\xb1\x82\x80\x2c\x97\xf1\x23\xe7\x4e\x7a\xdd\xfb\xfa\xa9\x7b\x99\x5e\x3f\xf4\x47\xe9\xcc\x42\x2b\x6a\x7d\x08\x09\xac\x5e\x56\x2c\x78\x66\x3f\x05\xaf\x17\x90\x8e\x84\x9c\xbf\x08\xbc\x2a\x37\xa6\x89\xd3\x3c\xbb\xe5\x23\xb4\x81\xdd\xba\xd0\xbb\xce\xdb\xcb\x37\x69\xff\x7d\xaf\x9b\x5e\x77\xd2\x77\x67\x52\xc9\x30\x52\x3c\x73\x62\xfa\x24\xd9\x83\x1f\x06\x46\xb4\x81\x27\x68\xb2\xd2\x08\xda\x87\x83\x52\x14\x39\xa3\xf9\x22\x80\xfe\xfd\x3b\x4d\x00\xcd\x8a\xbe\x63\x34\xe0\xf0\x83\x1e\x8f\x46\xe1\xf1\x89\x66\xf8\x18\xa9\x72\xfc\xdb\xae\xc2\xed\x5d\x21\x1c\xfe\x3f\x04\x7a\x53\x45\x42\x6b\x93\xce\xdd\xd6\x26\x46\x7a\x2a\x18\xce\xa9\xcd\x36\xda\x22\x8c\xf4\x27\xb0\x34\x15\xc6\x95\xbc\x40\x39\xdd\x98\x3f\xaf\x60\xc0\x32\x88\x77\x57\x7e\xb5\x3f\xf3\xcc\xb0\x3b\x60\x5d\x60\x10\xe6\xe7\x24\x09\x3b\xc2\x7a\xb1\x68\xeb\x85\xe6\x6d\xa1\x12\xf2\x62\x54\x8a\xde\x0f\xd6\xc9\xd9\x45\x28\xbf\xe2\x75\x0d\xa1\x42\x79\x6e\x30\x6c\x88\xc7\xd8\x42\xec\xda\xc6\x1e\x83\x4a\xac\x99\x26\x5e\x3c\x68\x7a\x75\x32\x6d\xf2\xd5\xab\x86\x51\x29\x45\xa6\x8c\x0c\xc9\xf6\x60\x86\x0d\x82\xd2\xae\x28\x21\x1d\xb0\xa5\x0e\x53\xc2\x0b\x1a\x09\x49\xd3\x5c\xf3\x0c\xf5\xc8\xae\x87\x7e\xbb\x60\x50\x7f\x9f\x87\x96\x28\x1e\x95\xad\xc0\x74\x7c\x3f\x32\x57\xa9\x81\x5e\xaf\x6b\x72\x9b\x0b\xd2\x47\xfd\x28\xa9\x35\x59\x53\xce\x71\x03\x73\x92\x23\x37\xd1\x8d\x43\xdb\x8d\x7e\x00\x3b\xdf\x11\xb5\xa9\x3b\xba\x10\x19\x91\x4a\xab\x28\x2d\x9a\x4d\xa9\xc9\x73\x6f\x03\xc6\x72\x61\xf9\xa0\xc0\x9c\x69\x6e\xed\x4c\x99\x9c\x6c\x23\xcc\x94\x85\x38\x86\x55\xf2\x2a\xf1\x15\xba\xb0\x06\x9a\xe4\x89\xb0\x81\x96\x8d\xa4\xa4\xe4\x33\x09\xac\xd7\x84\x9d\x6c\x42\xac\x3b\x1d\xc4\x97\x36\x12\x65\xda\xe8\x0e\x61\x85\x57\xaf\x3e\x7c\x4e\x2f\xcf\xbb\xbd\x94\xce\x8f\x8a\x00\x44\x48\xd0\x65\x24\xc1\xc2\x25\x4d\x80\x97\xf0\x87\x27\x4a\x94\xa3\xcd\x8c\xd0\x61\xb9\xf1\xca\x8d\x34\x83\xfa\x41\x7d\x25\xe3\xbe\x3f\x19\xe9\xa8\x73\x38\x39\x20\xab\xd2\xde\x68\x4a\x59\xe0\x14\x49\xf5\x0f\x8f\x7e\xbb\x89\x22\x3a\x34\x34\x9f\x49\x7f\x8c\x97\x22\x5f\xaf\x9f\xde\x47\x0f\xdf\xb3\xb1\xef\xdc\x8e\x06\xe0\x1c\xb3\x9f\xcd\xc8\x0a\x15\xb0\x19\xfc\x02\xad\x2d\xe9\x8b\xa2\xd5\xe2\xb7\x99\x0a\x1b\x3b\xd0\x44\x53\x9c\x22\x9d\x3d\x34\xb5\x06\x27\x6a\x8a\xe0\xc6\xc2\xeb\x7e\xe5\x43\x46\x12\x6a\xa0\xbb\x00\x90\x8e\x63\x35\x68\x66\x52\x71\x18\x3c\x12\x6f\xb7\x0c\x65\xe8\x3b\x31\x38\xe4\x65\xe1\xa2\x9a\xff\xf4\xc3\x65\xfa\xe5\xbc\x9b\xbe\xdf\x6a\xc0\xae\xe0\x66\x24\xb7\xfa\xb1\x07\x1f\x50\x92\xbc\x3a\x82\x3a\x58\x40\x97\x1c\x89\x45\x43\xfb\xa9\xba\xe8\x90\xe2\x51\x2b\x24\xbc\x3c\x3c\xad\x5e\x55\x3d\xab\x49\xfd\xdd\xff\x91\x6c\xce\x17\x7d\x3f\x99\x41\x6e\x48\x6d\x8e\x8e\x7f\x6f\x1f\xd2\xff\xd1\xc9\xcb\xc3\xc3\x3a\x74\xed\x49\x6d\xea\x8f\x69\xfd\x54\xe4\x42\xd1\xb5\xe7\x7b\x6b\x4c\x3f\x4f\x78\x7d\x61\xef\x95\x21\x85\xce\xfd\x2f\xb9\x57\x0e\xb4\x3b\xfa\xf3\xfe\xb0\xfa\x82\xb9\x7f\xaa\x72\x2c\xe9\x5e\xd4\x10\xb4\x25\xaf\x74\xf6\x34\xfb\x9b\xae\x24\xf5\x45\xe2\xf1\x8c\x24\x7e\xb6\xbc\x38\x86\xdb\x03\xc5\xc8\x90\x7a\xbf\x01\x99\xe5\x10\xfc\x36\x06\x6b\xf5\xb1\x91\xd3\xb2\x19\xc6\x9f\x4a\x52\xa5\x60\x4d\xb9\x5a\x9b\x42\xaa\x83\x68\x28\x9e\xc2\x68\xf0\xae\x14\x34\x5e\x74\xc0\xd9\xb6\x9b\xbb\x4d\xac\x0f\x34\xfd\xbf\xe0\x78\x20\xfb\x6c\xc7\xa6\xd9\x2a\xe6\xb1\x05\x6e\x89\x49\x7f\x9d\x7a\x16\x47\xff\x06\x00\x00\xff\xff\xf4\x18\x1b\x76\x64\x0b\x00\x00"

func dataAwsVpcPublicPrivateBuildBuildPythonShTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateBuildBuildPythonShTpl,
		"data/aws-vpc-public-private/build/build-python.sh.tpl",
	)
}

func dataAwsVpcPublicPrivateBuildBuildPythonShTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateBuildBuildPythonShTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/build/build-python.sh.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\x13\x31\x10\xbd\xe7\x57\x8c\x5c\x4e\x88\x6e\x0a\xa7\xaa\x12\xb7\x4a\xdc\xe8\x85\x1b\x42\x2b\xaf\xd7\x09\x56\x1d\xdb\xf2\x47\xd0\x2a\xda\xff\xce\xd8\x8e\xe3\xfd\x48\x5b\x10\x12\xdb\x4b\xfb\xde\x8c\x67\xe6\x3d\x7b\x7a\x03\x5f\xb8\xe2\x96\x7a\xde\x43\x37\xc0\x93\xf7\xfa\x03\xf4\x1a\x94\xf6\xc0\x7b\xe1\xe1\x40\x55\xa0\x52\x0e\x9b\xcd\x91\x5a\x41\x3b\xc9\x81\x08\xb5\xb3\xb4\x15\x3d\x81\xd3\x38\x81\xe9\x2f\xd7\x52\xc6\xb8\x73\xed\x33\x1f\xae\x90\x8e\x33\xcb\xfd\x0b\xa4\xe5\x7b\xa1\xd5\x82\xc0\xd0\x56\xd1\x03\x4f\xf0\x34\xe1\x20\x16\x91\x42\x39\x4f\x15\xe3\xad\x1f\x4c\x0c\x87\x9e\xef\x68\x90\x1e\x3e\x03\xf1\x9f\x9a\x83\x60\x56\x13\x98\x66\x18\x2b\x8e\x38\x77\xeb\x42\xa7\xb0\xab\xd5\x38\x26\x74\x52\xb0\x17\xe9\xa3\x61\x2d\x13\xbd\xbd\x02\x9f\x63\x37\xc6\xea\xa3\xe8\xb9\x4d\x03\x22\xb4\x01\xa8\xfa\xc4\xc6\xde\x9d\x30\xb1\x99\xeb\x36\x12\x0c\xab\x4a\xcd\xc3\x2a\x9e\xc2\xb2\x66\x10\xbf\x59\x58\xc6\x31\x04\x9b\xb0\xdc\xe9\x60\x59\xb5\x20\x58\xe1\x87\x76\x6f\x75\x30\x04\x08\x97\x5d\xee\x2c\xca\x1c\x4f\x39\x9d\xf2\xaf\xe3\x78\x8b\xdc\x6d\x3e\xb4\x38\x9e\xaa\xe6\x11\x6b\xc5\xfc\x37\x52\xc8\xf1\x3d\xd6\x73\xe9\x40\x00\x9c\xdf\x6b\xa6\x65\xee\xef\xf6\x63\x02\x77\x56\x1f\x5a\xa3\xad\x4f\xe0\x5d\xc2\xbc\x2e\x48\xc5\xa2\xb6\x6d\x27\x35\x7b\x76\x88\x7d\x27\x77\x4d\xfa\xd9\xde\x91\x1f\xc8\x8f\xb1\x98\x50\x2f\x57\x23\x9e\x19\x72\xa5\xe0\xfd\xb5\x8a\xf7\x7f\x56\xf2\x6d\x35\xa9\x31\x13\x35\x61\xa1\xe7\x5f\x6a\xf9\xda\x78\xff\x28\x66\x2d\x16\x99\xf1\x3c\xdf\xff\xb4\x6f\xa5\x65\xba\x88\x2b\x01\x2f\xdf\x9b\x4a\xe6\x77\xea\x26\x09\x65\xcc\xe5\x43\xce\xe3\xce\xbd\x2b\xb2\xac\x5d\x6d\xb0\xb1\xa6\x24\x95\x2d\xe3\x66\x45\x62\x52\x61\x1a\x9c\xa0\x79\x7f\x4e\xc0\x8c\x1b\xf8\xf6\xf4\xf8\xf4\x80\x7b\xf4\x99\x83\x14\xce\x73\x85\xbe\x42\xd4\xcb\x01\xd3\x6a\x27\xf6\xc1\xc6\xd5\x81\xb1\x99\xc6\x7d\x91\xf5\x97\x5d\x95\x15\xe6\x37\x35\x52\x13\x77\x16\x37\xfe\xb2\x0b\xd7\x57\xbc\x52\x25\xbd\x26\x26\x53\x6e\xe0\x91\x1b\xa9\x07\xa0\xa8\x90\x07\xbd\xab\x33\x2f\x0c\x2b\xf8\xd4\x35\xdc\xcb\x73\xcf\xce\x3b\xe9\x20\x92\x47\xb3\x25\x5d\xe9\x19\x3c\x31\x33\xbe\x8c\xd9\x39\xab\x95\x9d\x82\xcb\x3f\x89\x45\xd1\x02\xe7\xc7\x14\xef\xfa\xdc\x58\x4c\x7f\xc5\xf5\x68\xe3\xc5\x44\x4f\xf7\xe5\x51\x7c\x5d\xad\xc9\x8b\x74\x3a\x78\x13\x3c\x90\x60\x65\x56\xe3\x48\x65\x48\xc1\x3f\xbd\x37\x0f\xdb\x6d\x2e\x14\xef\x53\x3c\xbd\x57\x2e\xf7\xb7\x8d\x7b\xfa\x77\x00\x00\x00\xff\xff\x11\x23\xa2\xbf\x89\x07\x00\x00"

func dataAwsVpcPublicPrivateDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateDeployMainTfTpl,
		"data/aws-vpc-public-private/deploy/main.tf.tpl",
	)
}

func dataAwsVpcPublicPrivateDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataCommonDevVagrantfileTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x6d\x6f\xe3\x36\x12\xfe\xae\x5f\x31\x55\xd2\x7d\x01\x22\xe9\x36\x77\xb8\x0f\xee\x26\x68\x9a\x4d\x9b\x00\x7b\x76\x60\xa7\x05\x0e\x77\x07\x97\x96\x68\x8b\x88\x4c\x72\x49\xca\x89\xeb\xf8\xbf\xdf\x33\x94\x1c\x27\x6d\x36\x2d\xb0\xde\x50\x43\xce\xdb\x33\x33\x0f\x79\x40\x3f\x49\x2d\x9d\x08\xb2\xa2\xd9\x9a\x46\x21\x98\x23\xaa\x0c\x69\x13\x48\x56\x2a\x7c\x93\x1c\x24\x07\x74\x53\x2b\x4f\xf8\x17\x6a\x49\xbf\x88\x85\x13\x3a\xcc\x55\x23\x69\xf1\x7b\x5d\x9a\x1b\x17\x4f\x55\x72\x25\x1b\x63\x97\x52\x07\x32\x73\x98\x08\x6c\x42\x58\xdb\xa8\x52\x04\x65\x74\xe1\xa5\x5b\xa9\x52\xe6\x74\x15\xc8\xd7\xa6\x6d\xaa\xe8\x74\x26\xa9\x16\xba\xca\xd8\xb9\xac\x72\xba\x31\xb4\x34\x95\x9a\xaf\xd9\x2c\xec\x3c\x71\x7f\x44\xad\x97\xd1\xdb\x99\xb5\x2c\xc8\x93\xa4\xdf\xce\x4b\xa3\xe7\x6a\xd1\x3a\xf9\x2e\x3d\x4e\xdf\x73\x46\x0f\x9d\xe8\x21\x21\xea\x56\xf9\x6a\x99\xcf\xcc\x3d\x9d\x50\x5a\x0b\x5f\xab\xd2\x38\x5b\x58\x27\x4b\xe5\xe5\x3f\xff\x91\x26\x38\x78\x40\x97\xc6\x23\x01\xdd\xac\x49\xcb\x70\x67\xdc\xed\x33\xf5\x5e\x46\xa9\x75\x6a\x05\x1c\xa6\xbd\x20\x3d\x22\x65\x07\x94\x6e\x36\x0c\xc4\x54\xd9\xa9\xa8\x2a\x27\xbd\xa7\xed\xb6\x37\x3c\x91\xa1\xb5\x24\xc8\xaf\x75\x09\xfc\xe6\xa6\xa9\xa4\xa3\xb9\x33\x4b\x32\xad\x23\xb6\xa2\xf4\x82\x2a\x85\x80\x82\x71\x48\xdf\x50\xb1\xea\xb2\x7b\x16\x43\x67\x60\xda\x1b\x78\x0b\x97\x56\x84\x3a\xdf\x19\xd8\x6e\xdf\x1e\x51\xba\xd3\x4c\x8f\xa0\x4b\x64\xee\x50\x37\xc4\xf7\x28\xa5\x85\x33\xad\x7d\x22\xe9\x82\xbc\xd0\x62\x86\x32\x4f\x26\x97\x24\x16\x5c\x4a\x94\xf7\x4e\xb8\x8a\x0d\x7b\x83\xf2\x87\xc0\xcb\x3e\x7b\xe4\x6a\xa5\xae\xa4\x2e\x95\xf4\x31\x03\xbf\x8f\xd4\xfb\x3a\xef\xb5\xa7\x9d\xad\x13\x0a\xae\x95\x9d\xa3\x1f\x4d\xab\xab\xd8\x17\xb4\xab\x5c\xf7\xf5\x4e\xcd\x49\xe8\xf5\x7b\x9c\xda\x7c\x1b\xbb\x0b\x88\x90\xd2\x58\xee\x34\xa6\x90\xf8\x1c\x38\xd3\xb7\x5b\x1c\xe3\x7d\x94\xb4\x30\x68\xc7\x62\x7f\x2a\x03\x30\x50\x6f\x8c\xb1\xf9\x39\xa4\x01\x60\x71\x31\x5e\x87\x92\x8d\x45\x04\xb1\x78\x76\xd4\x3a\xb3\x52\x9e\x23\x4c\x7d\x2d\x9b\x86\x2b\xae\x1b\xa5\x25\x30\x2c\x2b\x3a\xd8\x40\x61\x4b\x6f\xde\xd0\x0c\xad\xd5\x7f\x16\x4b\xa1\x74\xee\xeb\xb4\x4b\x06\x50\x71\x3e\x08\x3a\x42\xf0\xd9\x88\x8a\x44\xd3\xc4\xf2\xcf\x9d\x58\xf0\xec\x78\xaa\xa5\x93\x31\x6f\xa0\xf0\x0c\xe0\x7c\x0f\xc9\xee\x34\xe3\xc2\xfd\xb6\xd7\x8e\x88\x70\xe6\xbd\xe4\xc1\x49\x78\xd9\x6e\x5f\x8c\xe0\x4a\xfb\xc0\x01\x5c\xaf\x43\x8d\xc4\x66\xad\xc2\x4c\x4a\xbd\x52\xce\x68\x56\xfe\xab\x00\x1c\xfa\xd2\x29\x1b\xa6\x36\xda\x49\xe0\x25\x49\x9e\xcb\x50\xa0\x8f\x1f\x27\xe7\xe3\xab\xeb\x9b\xc4\xcb\x40\x19\x13\x4e\xab\xfb\xa5\x74\x4e\xde\xab\xb8\xb4\xca\xca\xb9\x50\x4d\x2f\x0e\x4e\x94\xe8\x18\xac\x8c\x7b\xf7\x9e\x36\xdc\xcc\x8d\x29\x45\x83\x6e\x6c\x5d\x29\x99\x04\x4e\x0e\x3f\xec\xc5\x1c\x90\x36\x27\x87\xc7\x2c\x92\x65\x6d\x28\xbd\x18\x8f\x47\x63\x12\x81\x0e\x37\x7b\xa5\xed\xe0\x70\xd3\x9d\xdd\x7e\x47\x9f\x05\x66\xbe\x31\x0b\x3f\xe0\x4a\x61\x34\xa4\x25\xee\x26\x9e\x3f\x57\x60\xa3\xf0\x6b\x8f\x3f\xf4\x40\x21\xc6\xa6\xe9\xf8\x6f\xc9\x36\x41\x74\x96\xde\xc6\xe0\x28\x3d\xdc\xfc\x70\x36\xb9\x9c\x4e\x46\x3f\x8f\xcf\x2f\xb6\x29\x0b\x3e\x5f\x0d\x2f\x86\xa3\x6d\xfa\x96\x10\x43\x02\x2e\x63\xa3\x99\xbc\x97\xe5\x80\xf8\xff\x16\x23\x54\x9a\xe5\x12\xf4\x47\x77\x2a\xd4\xe8\x84\x60\xdb\x18\xca\x82\x29\x16\x4b\x66\xc8\x4a\x79\xdb\x88\xb5\xac\x12\x23\x19\x04\x98\xfe\x3e\xa5\xe3\xd3\x37\x1f\x10\x50\x3c\xeb\x28\x0b\x5d\xc4\xa7\x54\xa0\x21\x0a\xdd\x36\xcd\x77\xb4\x7d\xf4\x89\x53\x83\x9d\x75\x81\xf1\x05\x06\xf7\xf0\xb0\x04\x43\x61\x36\x13\xd3\x44\xbb\x1d\x5e\xff\x61\x8d\xff\x11\x7c\xf4\x16\xfe\x25\x6e\x25\xa1\x3c\x20\x80\x50\x03\xc7\x5f\x7b\xce\x20\x8c\xf8\xaf\xb4\x30\x98\xfd\x8e\xb5\x9a\x48\x5a\xcc\xcf\xa0\x56\x16\xc4\x29\xea\xac\x62\x46\x1e\x39\x89\x4e\x4f\x31\xaf\xb5\x59\xca\x9d\xa8\xc8\x79\x6c\x5c\x99\xbe\xe0\x8e\xed\xf5\x5d\xb4\x42\x73\xf2\xb5\x24\xda\x60\x96\x98\x72\x54\x1c\x3e\xbb\xaa\x56\xbd\xa3\x9c\x9e\x5b\x46\x37\x87\x56\x34\xd0\x2c\x66\x4a\x17\xa2\x0c\x91\xbb\x5e\x0d\x02\x51\x9c\xf7\xac\xc4\x74\xc7\x74\x18\xc7\x0e\x7d\x02\xac\x01\xa6\xd2\x09\x78\xea\x9b\xae\x55\xd2\x9f\xbd\xfc\x34\x9c\xa0\x56\x29\x15\x32\x94\x05\x70\xe1\x5f\x35\xed\xa6\x87\x4e\x9f\xd4\x04\xd9\xe8\x64\xd7\x9a\x4f\x14\x1f\xc8\xb7\xb8\xb4\x82\x94\x94\x89\x3f\x33\x03\x03\x46\x76\x0a\xfd\xad\xca\xb5\x20\x5c\x38\x41\xb8\x90\xcc\x15\x46\xe6\xde\x1a\x17\xe8\xd3\xc5\x0f\x57\x67\xc3\xe9\x8f\xe3\xd1\xf0\xe6\x62\xf8\xe9\x44\x1b\xad\x98\x0a\x23\x0c\x98\x2c\xd3\x50\x7a\x56\x45\x7e\x17\x36\xc0\x82\x35\x5e\xe1\xfa\x61\x42\xe7\xb6\x6c\x2d\xb3\xa9\x5e\xe4\x79\x9e\x26\x3b\x9f\x38\x99\xe1\x2a\xe8\x36\xe5\x1f\xc4\xaa\xa7\x95\x6c\xdd\xd7\x2d\xf3\x66\x1e\x70\x11\xc8\x0c\x24\x62\xa5\x0b\x6c\xfd\x05\x59\xc6\xc3\x80\x32\xb3\x21\xcc\x96\xf6\x9c\x42\x56\x87\x60\xfd\xde\x49\x55\x65\xbc\xff\x18\xe9\x3a\xfa\xb1\x62\x30\xbf\x75\x80\x06\x18\x89\xca\x6b\xf4\x90\xff\x5a\xbc\x3b\x6c\xae\xff\x7d\x73\x39\x1a\x4e\x7f\xb9\x18\x4f\xae\x46\xc3\x13\xbe\xbc\xbb\x78\xa7\x2b\xe9\x22\xd3\xc5\xcb\x9b\x21\xea\x99\x92\x61\xea\xc9\x92\xc1\xf1\xad\x65\x43\xf1\x46\x14\xe5\x2d\x26\xc9\x47\x9c\xfe\x1a\xf6\xaf\xc0\x36\xfb\xcd\xd1\x02\x23\xb0\x94\xae\x44\x0b\x82\xd7\x22\x37\x67\x18\x57\xd0\x32\x7f\xff\x17\x2d\xd0\xa8\x99\xfd\x92\xf1\x3d\xf8\x1b\x96\x1f\x16\x71\xf9\x0a\xac\xbd\x8e\xff\xd2\xe0\xa5\xf5\xf7\x78\x9a\x45\x5d\xce\x87\xcf\xd1\x78\x59\xca\x3a\x7f\x00\x04\x94\x1d\xd1\xd8\x0f\xda\xae\x59\x5e\xb6\xfc\xf1\xdd\x1d\xa7\x9b\x7d\xa1\x6c\x44\x19\xc5\xf2\x0e\x8a\x62\x66\x4c\xf0\xcc\xa8\xb9\x5d\x5b\x91\x2b\x53\xe0\x54\x06\xe3\xf8\x7e\x1f\xad\xc1\xcf\x0e\xa3\xbd\xaf\x2e\x9c\x49\xff\x30\xc1\x0b\x6b\xbf\xc5\xb7\xe3\xd7\xb8\x60\x17\xe2\x5e\x92\xfd\x3e\xce\xf4\x6b\xba\x51\x11\xf3\x7b\xa7\x29\x1b\x53\xbf\x3f\xd8\x91\xe2\x2b\x6a\x31\xd4\xa7\xc4\xf2\x13\x6a\x0c\xc6\xe4\x57\x2d\x73\x0c\x67\xc7\xd7\xb5\x99\xd3\xe5\xcd\xcd\x35\x33\xe0\x1d\x3c\x09\xdd\x3d\xc6\xb2\xfe\x39\xf5\xf8\xfc\xe2\x19\x60\x2e\xac\x77\xd9\x70\xcf\xf4\x64\x91\x65\x8b\xc6\xcc\xd0\x29\xad\x6b\xf2\x14\x1b\xdf\xe3\x57\xb7\x33\x3c\x94\x97\x83\x34\xef\x5d\x8d\xe6\x78\x0b\xf7\x05\xd8\xef\x17\x69\xd2\xdf\xd5\xff\x0f\x00\x00\xff\xff\xf2\xa4\xcd\x5b\x2e\x0c\x00\x00"

func dataCommonDevVagrantfileTplBytes() ([]byte, error) {
	return bindataRead(
		_dataCommonDevVagrantfileTpl,
		"data/common/dev/Vagrantfile.tpl",
	)
}

func dataCommonDevVagrantfileTpl() (*asset, error) {
	bytes, err := dataCommonDevVagrantfileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/common/dev/Vagrantfile.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/aws-simple/build/build-python.sh.tpl": dataAwsSimpleBuildBuildPythonShTpl,
	"data/aws-simple/build/template.json.tpl": dataAwsSimpleBuildTemplateJsonTpl,
	"data/aws-simple/deploy/main.tf.tpl": dataAwsSimpleDeployMainTfTpl,
	"data/aws-vpc-public-private/build/build-python.sh.tpl": dataAwsVpcPublicPrivateBuildBuildPythonShTpl,
	"data/aws-vpc-public-private/deploy/main.tf.tpl": dataAwsVpcPublicPrivateDeployMainTfTpl,
	"data/common/dev/Vagrantfile.tpl": dataCommonDevVagrantfileTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"aws-simple": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"build-python.sh.tpl": &bintree{dataAwsSimpleBuildBuildPythonShTpl, map[string]*bintree{
				}},
				"template.json.tpl": &bintree{dataAwsSimpleBuildTemplateJsonTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsSimpleDeployMainTfTpl, map[string]*bintree{
				}},
			}},
		}},
		"aws-vpc-public-private": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"build-python.sh.tpl": &bintree{dataAwsVpcPublicPrivateBuildBuildPythonShTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsVpcPublicPrivateDeployMainTfTpl, map[string]*bintree{
				}},
			}},
		}},
		"common": &bintree{nil, map[string]*bintree{
			"dev": &bintree{nil, map[string]*bintree{
				"Vagrantfile.tpl": &bintree{dataCommonDevVagrantfileTpl, map[string]*bintree{
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

