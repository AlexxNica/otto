// Code generated by go-bindata.
// sources:
// data/aws-simple/build/build-python.sh.tpl
// data/aws-simple/build/template.json.tpl
// data/aws-simple/deploy/main.tf.tpl
// data/aws-vpc-public-private/build/build-python.sh.tpl
// data/aws-vpc-public-private/deploy/main.tf.tpl
// data/common/dev/Vagrantfile.tpl
// DO NOT EDIT!

package pythonapp

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataAwsSimpleBuildBuildPythonShTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\xeb\x6e\xdb\x38\x13\xfd\xaf\xa7\x98\x2a\xc6\xd7\x04\x28\xad\x24\xdf\x5e\x8a\xa4\x29\xb6\x4d\xdd\x26\x40\x21\x17\x4e\xba\xdb\xa2\x0d\x0c\x5a\x1a\xdb\xdc\xc8\x24\x43\x52\xbe\x34\xeb\x77\xdf\x21\x25\xcb\x71\xec\x06\x9b\xfc\xb0\x34\x9a\xcb\xe1\x99\xe1\x21\xf7\x9e\x25\x03\x21\x93\x01\xb7\xe3\x28\xb2\xe8\x80\x29\x90\xaa\x94\xf5\x23\x1a\x83\x73\x11\x1e\xb5\xd0\x38\xe4\xa2\xa8\xcd\xce\xf0\x0c\xa3\x88\x9e\x94\xd9\x3f\x80\xfb\x08\x00\x0a\x95\xf1\x02\xac\x2a\x4d\x86\x43\x51\xe0\x59\xeb\x68\x6d\x2e\x84\x44\xa9\xce\x5a\xc7\xde\x84\xd9\x58\x41\xdc\xe9\xf5\xba\x3d\xe0\x0e\x5a\xf7\xeb\xa0\xe5\x49\xeb\xbe\xf2\x5d\x9e\xc2\x47\x6e\x1d\xc5\x8f\xec\x49\xec\xc3\x46\x06\x35\x28\xe7\x14\x24\x53\x6e\x12\xfa\x90\xd8\x85\xa5\x1f\xf8\x07\x5c\xc0\x26\xe1\xf8\x30\x5a\x46\x84\x4e\xc3\xf3\x00\x0e\xe2\xd6\xfd\xdb\x37\x57\x17\xfd\xab\xee\xe7\xde\x79\x67\x19\x7b\xc3\xc7\xcb\xb4\x93\x76\x97\xf1\x73\x20\x0c\x51\xa4\xd0\x2f\x81\x3e\xfc\x11\xc3\xf1\xeb\xff\x1d\x51\x3a\x4a\x3a\x42\x03\xcc\x55\xf5\x5e\x43\x92\xe3\x34\x91\x65\x51\x9c\xc2\x32\x52\x45\x08\xa8\x96\xf1\xcd\x7b\xdc\x00\x05\xfb\x4f\xd1\x1e\x64\x85\x2a\x73\x96\x29\x39\x14\x23\xc8\xb8\x04\x21\x1d\x9a\x21\x1a\x84\x99\x70\x63\xe0\xda\x41\xa6\x26\x13\x2e\x73\x0b\x62\x08\xc2\x3d\xb7\x60\x9d\x28\x0a\xf2\x04\x6d\x14\xad\xd3\x5a\x2a\x02\xf1\x5f\x5c\x38\x21\x47\x30\xa4\x85\x6c\xa4\x25\x4c\x94\x42\x17\xe8\xb0\xdd\x6e\xc7\x51\x29\x29\x1e\xbe\x7d\x03\x36\xac\xc9\x11\x83\x24\x44\x24\x42\x5a\xc7\x65\x86\xc9\x40\x29\xc7\x86\x42\x0a\x3b\xc6\x1c\x6e\x6e\x4e\x21\x57\x44\xab\x2d\x90\x68\x3d\x6c\xff\x1a\xe5\x4a\x52\x4f\x7d\xdd\x37\x79\xee\xcb\x7a\xa4\xc4\xb9\xb2\xc2\x29\x23\xd0\x02\x41\x86\x52\xe7\xdc\x83\x0a\x75\x15\x82\x2d\x73\xe5\x3d\xd9\x88\x86\x26\x7c\xc4\x2d\x73\xc0\x40\xeb\x63\x0b\xd0\x0b\x37\x56\x92\x59\x35\x74\x33\x6e\x90\xd1\x7a\x35\x1a\xe7\xb3\xef\xb0\x31\x4f\x94\x92\x21\x11\x75\x55\x5a\xad\x8c\x63\x63\xe7\xb4\x5d\x17\xc9\x73\xe6\xbf\x37\x48\x17\xa1\x8e\xe6\x27\xc3\x5b\x43\x1d\xa3\xd6\xf1\xdc\x4a\x7e\x8b\xf6\x67\x78\x23\x9c\xfb\xc4\xf0\xe9\xeb\xf5\x45\x37\xed\xff\xd9\xe9\x5d\x5d\x76\xd3\xb3\xf8\xfe\xbe\xc6\xdb\x9f\xa2\xb1\x82\x80\x2c\x97\xf1\x23\xe7\x4e\x7a\xdd\xfb\xfa\xa9\x7b\x99\x5e\x3f\xf4\x47\xe9\xcc\x42\x2b\x6a\x7d\x08\x09\xac\x5e\x56\x2c\x78\x66\x3f\x05\xaf\x17\x90\x8e\x84\x9c\xbf\x08\xbc\x2a\x37\xa6\x89\xd3\x3c\xbb\xe5\x23\xb4\x81\xdd\xba\xd0\xbb\xce\xdb\xcb\x37\x69\xff\x7d\xaf\x9b\x5e\x77\xd2\x77\x67\x52\xc9\x30\x52\x3c\x73\x62\xfa\x24\xd9\x83\x1f\x06\x46\xb4\x81\x27\x68\xb2\xd2\x08\xda\x87\x83\x52\x14\x39\xa3\xf9\x22\x80\xfe\xfd\x3b\x4d\x00\xcd\x8a\xbe\x63\x34\xe0\xf0\x83\x1e\x8f\x46\xe1\xf1\x89\x66\xf8\x18\xa9\x72\xfc\xdb\xae\xc2\xed\x5d\x21\x1c\xfe\x3f\x04\x7a\x53\x45\x42\x6b\x93\xce\xdd\xd6\x26\x46\x7a\x2a\x18\xce\xa9\xcd\x36\xda\x22\x8c\xf4\x27\xb0\x34\x15\xc6\x95\xbc\x40\x39\xdd\x98\x3f\xaf\x60\xc0\x32\x88\x77\x57\x7e\xb5\x3f\xf3\xcc\xb0\x3b\x60\x5d\x60\x10\xe6\xe7\x24\x09\x3b\xc2\x7a\xb1\x68\xeb\x85\xe6\x6d\xa1\x12\xf2\x62\x54\x8a\xde\x0f\xd6\xc9\xd9\x45\x28\xbf\xe2\x75\x0d\xa1\x42\x79\x6e\x30\x6c\x88\xc7\xd8\x42\xec\xda\x06\x8c\x55\xe0\xce\x92\xd2\x9a\xa0\xbb\xbb\xc1\x26\xd6\x4c\x13\x2f\x2a\x34\xd5\x3a\x99\x36\x75\x6a\x36\x60\x54\x4a\x91\x29\x23\x43\x91\x3d\x98\x61\x83\xac\xb4\x2b\xaa\x48\x1f\x6c\xa9\xc3\xf4\xf0\x82\x46\x45\xd2\x94\xd7\xfc\x43\x3d\xca\xeb\xcd\xb0\x5d\xb0\x42\x47\x79\x68\xe9\xe2\x51\xd9\x0a\x4c\xc7\xf7\x29\x73\x95\x4a\xe8\xf5\x7a\x27\xb7\xb9\x20\xdd\xd4\x8f\x92\x5a\x93\x35\xe5\x1c\x37\x30\x27\x99\x72\x13\xdd\x38\xb4\xdd\xe8\x07\xb0\xf3\x1d\x51\x9b\x7a\xa4\x0b\x91\x11\xd9\xb4\x8a\xd2\xa2\xd9\x94\xa0\x3c\xf7\x36\xa2\x39\x17\x96\x0f\x0a\xcc\x99\xe6\xd6\xce\x94\xc9\xc9\x36\xc2\x4c\x59\x88\x63\x58\x25\xaf\x12\x5f\xa1\x0b\x6b\xa0\x09\x9f\x08\x1b\x68\xd9\x48\x4a\x0a\x3f\x93\xc0\x7a\x4d\xd8\xc9\x26\xc4\x7a\x02\x82\x28\xd3\x06\xa3\x4c\x1b\xdd\x21\xac\xf0\xea\xd5\x87\xcf\xe9\xe5\x79\xb7\x97\xd2\xb9\x52\x11\x80\x08\x09\xba\x8c\xa4\x59\xb8\xa4\x09\xf0\xd2\xfe\xf0\xa4\x89\x72\xb4\x99\x11\x3a\x2c\x37\x5e\xb9\x91\x96\x50\x3f\xa8\xaf\x64\xdc\xf7\x27\x26\x1d\x81\x0e\x27\x07\x64\x55\xda\x1b\x4d\x29\x0b\x9c\x22\x9d\x06\x87\x47\xbf\xdd\x44\x11\x1d\x26\x9a\xcf\xa4\x3f\xde\x4b\x91\xaf\xd7\x4f\xef\xa3\x87\xef\xd9\xd8\x77\x6e\x47\x03\x70\x8e\xd9\xcf\x66\x64\x85\x0a\xd8\x0c\x7e\x81\xd6\x96\x24\x46\xd1\x6a\xf1\xdb\x4c\x85\x0d\x1f\x68\xa2\x29\x4e\x91\xce\x24\x9a\x5a\x83\x13\x35\x45\x70\x63\xe1\xcf\x83\xca\x87\x8c\x24\xe0\x40\x77\x04\x20\x7d\xc7\x6a\xd0\xcc\xa4\xe2\x30\x78\x24\xde\x6e\x19\xca\xd0\x77\x62\x70\xc8\xcb\xc2\x45\x35\xff\xe9\x87\xcb\xf4\xcb\x79\x37\x7d\xbf\xd5\x80\x5d\xc1\xcd\x48\x6e\xf5\x63\x0f\x3e\xa0\x24\xd9\x75\x04\x75\xb0\x80\x2e\x39\x12\x8b\x86\xf6\x53\x75\x01\x22\x25\xa4\x56\x48\x78\x79\x78\x5a\xbd\xaa\x7a\x56\x93\xfa\xbb\xff\x23\x39\x9d\x2f\xfa\x7e\x32\x83\x0c\x91\x0a\x1d\x1d\xff\xde\x3e\xa4\xff\xa3\x93\x97\x87\x87\x75\xe8\xda\x93\xda\xd4\x1f\xd3\xfa\xa9\xc8\x85\xa2\xeb\xd0\xf7\xd6\x98\x7e\x9e\xf0\xfa\xc2\xde\x2b\x43\xca\x9d\xfb\x5f\x72\xaf\x1c\x68\x77\xf4\xe7\xfd\x61\xf5\x05\x73\xff\x54\xe5\x58\xd2\x7d\xa9\x21\x68\x4b\x76\xe9\x4c\x6a\xf6\x37\x5d\x55\xea\x0b\xc6\xe3\x19\x49\xfc\x6c\x79\xd1\x0c\xb7\x0a\x8a\x91\x21\xf5\x7e\x03\x32\xcb\x21\xf8\x6d\x0c\xd6\xea\x63\x23\xb3\x65\x33\x8c\x3f\x95\xa4\x4a\xc1\x9a\x72\xb5\x36\x85\x54\x07\xd1\x50\x3c\x85\xd1\xe0\x5d\x29\x68\xbc\xe8\xe0\xb3\x6d\x37\x77\x9b\x58\x1f\x68\xfd\x7f\xc1\xf1\xe0\x38\x60\x3b\x36\xcd\x56\x31\x8f\x2d\x70\x4b\x4c\xfa\x6b\xd6\xb3\x38\xfa\x37\x00\x00\xff\xff\xff\x4a\x4c\xbf\x7c\x0b\x00\x00"

func dataAwsSimpleBuildBuildPythonShTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleBuildBuildPythonShTpl,
		"data/aws-simple/build/build-python.sh.tpl",
	)
}

func dataAwsSimpleBuildBuildPythonShTpl() (*asset, error) {
	bytes, err := dataAwsSimpleBuildBuildPythonShTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/build/build-python.sh.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsSimpleBuildTemplateJsonTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\xdd\x8e\x9b\x3c\x14\xbc\xe7\x29\x2c\xa4\xec\x55\x80\x7c\xdf\xae\xaa\xaa\xb7\x7d\x8c\x55\xc4\x1a\xf0\x06\x2b\xfe\x93\x8f\x49\x95\x45\x7e\xf7\x1e\x9b\xdf\x54\x1b\x36\x6d\x6e\x8c\x3c\xc3\xcc\x78\x38\x4e\x9f\x10\xfc\xa5\x92\xab\xd2\xd0\xfa\xcc\x6c\x79\x61\x16\xb8\x56\xe9\x0f\x92\x1e\xf2\xef\xf9\x21\xdd\x27\x03\xe7\x42\x2d\xa7\x95\x60\x80\xd0\xf0\x1a\x6e\xd2\x5f\x50\xd2\xba\x66\x00\xe5\x99\x5d\x11\x51\x9d\x10\xfb\x35\x0a\xac\xb6\xcc\xdd\x43\x2d\x3b\x0d\x66\x37\x08\x88\xee\x84\x79\x5c\x3b\x02\x71\xdf\x4f\x41\x8c\xd5\x17\x1e\x32\x62\x52\x24\xbc\x8e\x6f\xf5\x3b\xf2\xae\x2d\x69\xb8\x25\x5c\xe1\x63\xa7\x1a\xea\x90\x55\xe2\x0e\xe4\x55\xc7\x45\x43\x76\x7e\x22\x8f\x2b\xca\xb9\xab\x61\xe1\xb4\xd0\x32\x21\xd2\xfd\x02\x70\x25\xb8\x0a\xd0\x6b\x2a\xcf\x41\x36\x33\xa4\x70\xd2\x14\xda\x39\x5d\x2c\x06\x59\xdf\x07\x67\xa1\xb5\xc9\x7f\xe2\xae\x63\x96\x78\x9f\x1e\x47\x25\xbf\xbf\xef\xf9\xce\x05\x5b\x5b\x82\xee\x6c\x1d\x11\xd4\x0c\x96\xde\x17\x6b\xbc\x61\xe0\xb8\x8a\xae\x81\xf4\x17\x69\x1e\x08\xb3\x55\x40\xdd\x3c\x7a\x74\xef\xc9\xd3\x13\xa9\x28\xb4\x24\x2f\x24\xe5\x2a\x87\xf6\x93\x2e\x76\x84\xa9\x26\x7c\xaf\xad\x4f\xb2\x51\xcf\x8e\xe0\xa0\x56\x18\x42\xa2\x02\xa6\xe8\x00\xcf\xf9\x36\x0f\xce\x1b\x9e\x79\xf0\x58\xd1\x1e\x69\x32\xa3\xc6\xe4\xee\xf4\xf1\x4f\x85\x41\x6d\xb9\x71\x01\x8a\xe3\x96\x99\xab\x6b\x75\x2c\x60\x52\x8b\xeb\x71\x9a\xe4\xc8\x1a\xa7\x78\xbe\x52\x8a\xca\xa8\x1e\xd2\xcc\xe2\xb3\x27\x95\xf4\x03\x7b\x67\x15\x2c\xd8\xcd\x05\xbc\x57\xcd\xed\x4d\xdd\xee\x27\xbd\xb9\xb4\x5b\x8a\x0b\xf1\x0b\xc5\xf9\xa2\x6f\xa9\x0d\xa4\xaf\xb2\xc5\x21\x28\xa9\xe4\x43\x1f\x3c\xfb\xff\xbf\x6f\xcf\x87\xe6\xe5\x65\xe1\x70\x05\x8e\x2a\x64\x4d\xb5\xd5\xcf\xb9\xa0\xf6\xc4\x56\x32\xd0\x96\xc1\x79\xaa\xbb\xab\x70\x7c\xbb\x55\xa9\x92\x97\x13\xd6\xf7\xe1\x09\x27\xfb\xcf\xec\xb8\xe2\x1c\x51\x69\x3e\x4b\x3c\xfc\x6b\x1d\x93\xc4\x27\xbf\x03\x00\x00\xff\xff\x6a\x06\xa6\x95\x67\x05\x00\x00"

func dataAwsSimpleBuildTemplateJsonTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleBuildTemplateJsonTpl,
		"data/aws-simple/build/template.json.tpl",
	)
}

func dataAwsSimpleBuildTemplateJsonTpl() (*asset, error) {
	bytes, err := dataAwsSimpleBuildTemplateJsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/build/template.json.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsSimpleDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x52\xc1\x8e\xdb\x20\x10\xbd\xe7\x2b\x46\x74\x8f\x5d\x27\xed\xb1\x52\xcf\xbd\xb5\x1f\x50\xad\x10\xc6\x24\x45\x8b\x01\xc1\x90\xca\xb2\xfc\xef\x1d\xa0\x16\xc1\xbb\xbd\x36\x39\xf9\xcd\x63\xde\xcc\x9b\xf7\x01\xbe\x29\xab\x82\x40\x35\xc1\xb8\xc0\x0f\x44\xf7\x11\x26\x07\xd6\x21\xa8\x49\x23\xcc\xc2\x26\x61\xcc\x72\x3a\xdd\x45\xd0\x62\x34\x0a\x98\xb6\xd7\x20\xb8\x9e\x18\xac\xdb\x03\x2c\x7e\x47\x2e\xa4\x54\x31\xf2\x57\xb5\xbc\x53\x8c\x4a\x06\x85\xff\x28\x06\x75\xd3\xce\x1e\x0a\x44\xe5\x56\xcc\xaa\xc0\x8f\x0f\x66\x7d\x60\x6a\x1b\x51\x58\xa9\x38\x2e\x3e\xd3\x61\x52\x57\x91\x0c\xc2\x57\x60\xf8\x79\x98\xb5\x0c\x8e\xc1\xe3\x8b\x98\x46\x4b\xd3\xf8\x34\x1a\x2d\x0f\xdd\xee\x5e\x72\xa9\xa7\xf0\x0e\xfc\x77\xed\x93\x0f\xee\xae\x27\x15\xca\xf4\x04\x9d\x00\xda\xf2\x59\xf5\x69\xa5\x87\x43\x6f\xca\xc6\x88\xd6\x6c\xe8\x69\x0d\x2f\xb4\x6a\x08\xe4\x5f\x47\xab\x38\x51\x68\x88\xa0\xa2\x4b\x41\x36\x7f\x53\xd0\xb8\xf0\x5b\x70\xc9\x33\x02\xbd\xaf\x93\x65\x0f\x6b\x9f\x75\xad\x1f\xdb\xf6\x5c\x5b\xee\xc7\x2c\x9a\x75\xc1\xa6\x57\xbf\xa9\x44\x35\x6d\x6f\x24\x17\x4b\x3f\x00\x5a\x1f\x9d\x74\xa6\x8e\xf7\xfc\xa9\x80\xd7\xe0\x66\xee\x5d\xc0\x02\x5e\x0a\x86\x6e\x47\x1a\x96\xad\xe5\xa3\x71\xf2\x35\x12\xf6\x93\x5d\x86\xf2\x3f\x5f\xd8\x0b\xd5\xb7\xac\xa6\xfe\x9b\xd8\x1b\x1b\xf7\x28\x3d\x1a\x48\x81\x83\xf6\x6b\xf7\x98\x75\xf1\xad\x4b\x5f\x2b\x77\x70\xbd\x7d\x0d\x1d\x79\xdc\xf5\xe9\xb2\x58\x88\x7b\xf2\x0f\x82\x3b\x5c\x4f\x92\xcf\xd3\x1f\x9d\x3a\xd7\x2d\x9f\xd6\xb7\x89\x18\x68\x9d\x21\x9f\xf3\x25\x3f\x46\x71\x23\x7f\xe1\x7b\x16\xe9\x82\xc1\xaa\x29\x2e\xa1\x4f\x08\x2c\x05\x53\x3d\xb8\x0b\x93\x0a\xf5\x17\xa2\xff\x72\x3e\x57\x89\x7d\xc7\xd2\xbc\x2e\xc0\x27\x1b\xb7\x73\x0e\xe8\x9f\x00\x00\x00\xff\xff\x5f\x73\x79\x4b\x5f\x04\x00\x00"

func dataAwsSimpleDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsSimpleDeployMainTfTpl,
		"data/aws-simple/deploy/main.tf.tpl",
	)
}

func dataAwsSimpleDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsSimpleDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-simple/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateBuildBuildPythonShTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\xeb\x6e\xdb\x38\x13\xfd\xaf\xa7\x98\x2a\xc6\xd7\x04\x28\xad\x24\xdf\x5e\x8a\xa4\x29\xb6\x4d\xdd\x26\x40\x21\x17\x4e\xba\xdb\xa2\x0d\x0c\x5a\x1a\xdb\xdc\xc8\x24\x43\x52\xbe\x34\xeb\x77\xdf\x21\x25\xcb\x71\xec\x06\x9b\xfc\xb0\x34\x9a\xcb\xe1\x99\xe1\x21\xf7\x9e\x25\x03\x21\x93\x01\xb7\xe3\x28\xb2\xe8\x80\x29\x90\xaa\x94\xf5\x23\x1a\x83\x73\x11\x1e\xb5\xd0\x38\xe4\xa2\xa8\xcd\xce\xf0\x0c\xa3\x88\x9e\x94\xd9\x3f\x80\xfb\x08\x00\x0a\x95\xf1\x02\xac\x2a\x4d\x86\x43\x51\xe0\x59\xeb\x68\x6d\x2e\x84\x44\xa9\xce\x5a\xc7\xde\x84\xd9\x58\x41\xdc\xe9\xf5\xba\x3d\xe0\x0e\x5a\xf7\xeb\xa0\xe5\x49\xeb\xbe\xf2\x5d\x9e\xc2\x47\x6e\x1d\xc5\x8f\xec\x49\xec\xc3\x46\x06\x35\x28\xe7\x14\x24\x53\x6e\x12\xfa\x90\xd8\x85\xa5\x1f\xf8\x07\x5c\xc0\x26\xe1\xf8\x30\x5a\x46\x84\x4e\xc3\xf3\x00\x0e\xe2\xd6\xfd\xdb\x37\x57\x17\xfd\xab\xee\xe7\xde\x79\x67\x19\x7b\xc3\xc7\xcb\xb4\x93\x76\x97\xf1\x73\x20\x0c\x51\xa4\xd0\x2f\x81\x3e\xfc\x11\xc3\xf1\xeb\xff\x1d\x51\x3a\x4a\x3a\x42\x03\xcc\x55\xf5\x5e\x43\x92\xe3\x34\x91\x65\x51\x9c\xc2\x32\x52\x45\x08\xa8\x96\xf1\xcd\x7b\xdc\x00\x05\xfb\x4f\xd1\x1e\x64\x85\x2a\x73\x96\x29\x39\x14\x23\xc8\xb8\x04\x21\x1d\x9a\x21\x1a\x84\x99\x70\x63\xe0\xda\x41\xa6\x26\x13\x2e\x73\x0b\x62\x08\xc2\x3d\xb7\x60\x9d\x28\x0a\xf2\x04\x6d\x14\xad\xd3\x5a\x2a\x02\xf1\x5f\x5c\x38\x21\x47\x30\xa4\x85\x6c\xa4\x25\x4c\x94\x42\x17\xe8\xb0\xdd\x6e\xc7\x51\x29\x29\x1e\xbe\x7d\x03\x36\xac\xc9\x11\x83\x24\x44\x24\x42\x5a\xc7\x65\x86\xc9\x40\x29\xc7\x86\x42\x0a\x3b\xc6\x1c\x6e\x6e\x4e\x21\x57\x44\xab\x2d\x90\x68\x3d\x6c\xff\x1a\xe5\x4a\x52\x4f\x7d\xdd\x37\x79\xee\xcb\x7a\xa4\xc4\xb9\xb2\xc2\x29\x23\xd0\x02\x41\x86\x52\xe7\xdc\x83\x0a\x75\x15\x82\x2d\x73\xe5\x3d\xd9\x88\x86\x26\x7c\xc4\x2d\x73\xc0\x40\xeb\x63\x0b\xd0\x0b\x37\x56\x92\x59\x35\x74\x33\x6e\x90\xd1\x7a\x35\x1a\xe7\xb3\xef\xb0\x31\x4f\x94\x92\x21\x11\x75\x55\x5a\xad\x8c\x63\x63\xe7\xb4\x5d\x17\xc9\x73\xe6\xbf\x37\x48\x17\xa1\x8e\xe6\x27\xc3\x5b\x43\x1d\xa3\xd6\xf1\xdc\x4a\x7e\x8b\xf6\x67\x78\x23\x9c\xfb\xc4\xf0\xe9\xeb\xf5\x45\x37\xed\xff\xd9\xe9\x5d\x5d\x76\xd3\xb3\xf8\xfe\xbe\xc6\xdb\x9f\xa2\xb1\x82\x80\x2c\x97\xf1\x23\xe7\x4e\x7a\xdd\xfb\xfa\xa9\x7b\x99\x5e\x3f\xf4\x47\xe9\xcc\x42\x2b\x6a\x7d\x08\x09\xac\x5e\x56\x2c\x78\x66\x3f\x05\xaf\x17\x90\x8e\x84\x9c\xbf\x08\xbc\x2a\x37\xa6\x89\xd3\x3c\xbb\xe5\x23\xb4\x81\xdd\xba\xd0\xbb\xce\xdb\xcb\x37\x69\xff\x7d\xaf\x9b\x5e\x77\xd2\x77\x67\x52\xc9\x30\x52\x3c\x73\x62\xfa\x24\xd9\x83\x1f\x06\x46\xb4\x81\x27\x68\xb2\xd2\x08\xda\x87\x83\x52\x14\x39\xa3\xf9\x22\x80\xfe\xfd\x3b\x4d\x00\xcd\x8a\xbe\x63\x34\xe0\xf0\x83\x1e\x8f\x46\xe1\xf1\x89\x66\xf8\x18\xa9\x72\xfc\xdb\xae\xc2\xed\x5d\x21\x1c\xfe\x3f\x04\x7a\x53\x45\x42\x6b\x93\xce\xdd\xd6\x26\x46\x7a\x2a\x18\xce\xa9\xcd\x36\xda\x22\x8c\xf4\x27\xb0\x34\x15\xc6\x95\xbc\x40\x39\xdd\x98\x3f\xaf\x60\xc0\x32\x88\x77\x57\x7e\xb5\x3f\xf3\xcc\xb0\x3b\x60\x5d\x60\x10\xe6\xe7\x24\x09\x3b\xc2\x7a\xb1\x68\xeb\x85\xe6\x6d\xa1\x12\xf2\x62\x54\x8a\xde\x0f\xd6\xc9\xd9\x45\x28\xbf\xe2\x75\x0d\xa1\x42\x79\x6e\x30\x6c\x88\xc7\xd8\x42\xec\xda\x06\x8c\x55\xe0\xce\x92\xd2\x9a\xa0\xbb\xbb\xc1\x26\xd6\x4c\x13\x2f\x2a\x34\xd5\x3a\x99\x36\x75\x6a\x36\x60\x54\x4a\x91\x29\x23\x43\x91\x3d\x98\x61\x83\xac\xb4\x2b\xaa\x48\x1f\x6c\xa9\xc3\xf4\xf0\x82\x46\x45\xd2\x94\xd7\xfc\x43\x3d\xca\xeb\xcd\xb0\x5d\xb0\x42\x47\x79\x68\xe9\xe2\x51\xd9\x0a\x4c\xc7\xf7\x29\x73\x95\x4a\xe8\xf5\x7a\x27\xb7\xb9\x20\xdd\xd4\x8f\x92\x5a\x93\x35\xe5\x1c\x37\x30\x27\x99\x72\x13\xdd\x38\xb4\xdd\xe8\x07\xb0\xf3\x1d\x51\x9b\x7a\xa4\x0b\x91\x11\xd9\xb4\x8a\xd2\xa2\xd9\x94\xa0\x3c\xf7\x36\xa2\x39\x17\x96\x0f\x0a\xcc\x99\xe6\xd6\xce\x94\xc9\xc9\x36\xc2\x4c\x59\x88\x63\x58\x25\xaf\x12\x5f\xa1\x0b\x6b\xa0\x09\x9f\x08\x1b\x68\xd9\x48\x4a\x0a\x3f\x93\xc0\x7a\x4d\xd8\xc9\x26\xc4\x7a\x02\x82\x28\xd3\x06\xa3\x4c\x1b\xdd\x21\xac\xf0\xea\xd5\x87\xcf\xe9\xe5\x79\xb7\x97\xd2\xb9\x52\x11\x80\x08\x09\xba\x8c\xa4\x59\xb8\xa4\x09\xf0\xd2\xfe\xf0\xa4\x89\x72\xb4\x99\x11\x3a\x2c\x37\x5e\xb9\x91\x96\x50\x3f\xa8\xaf\x64\xdc\xf7\x27\x26\x1d\x81\x0e\x27\x07\x64\x55\xda\x1b\x4d\x29\x0b\x9c\x22\x9d\x06\x87\x47\xbf\xdd\x44\x11\x1d\x26\x9a\xcf\xa4\x3f\xde\x4b\x91\xaf\xd7\x4f\xef\xa3\x87\xef\xd9\xd8\x77\x6e\x47\x03\x70\x8e\xd9\xcf\x66\x64\x85\x0a\xd8\x0c\x7e\x81\xd6\x96\x24\x46\xd1\x6a\xf1\xdb\x4c\x85\x0d\x1f\x68\xa2\x29\x4e\x91\xce\x24\x9a\x5a\x83\x13\x35\x45\x70\x63\xe1\xcf\x83\xca\x87\x8c\x24\xe0\x40\x77\x04\x20\x7d\xc7\x6a\xd0\xcc\xa4\xe2\x30\x78\x24\xde\x6e\x19\xca\xd0\x77\x62\x70\xc8\xcb\xc2\x45\x35\xff\xe9\x87\xcb\xf4\xcb\x79\x37\x7d\xbf\xd5\x80\x5d\xc1\xcd\x48\x6e\xf5\x63\x0f\x3e\xa0\x24\xd9\x75\x04\x75\xb0\x80\x2e\x39\x12\x8b\x86\xf6\x53\x75\x01\x22\x25\xa4\x56\x48\x78\x79\x78\x5a\xbd\xaa\x7a\x56\x93\xfa\xbb\xff\x23\x39\x9d\x2f\xfa\x7e\x32\x83\x0c\x91\x0a\x1d\x1d\xff\xde\x3e\xa4\xff\xa3\x93\x97\x87\x87\x75\xe8\xda\x93\xda\xd4\x1f\xd3\xfa\xa9\xc8\x85\xa2\xeb\xd0\xf7\xd6\x98\x7e\x9e\xf0\xfa\xc2\xde\x2b\x43\xca\x9d\xfb\x5f\x72\xaf\x1c\x68\x77\xf4\xe7\xfd\x61\xf5\x05\x73\xff\x54\xe5\x58\xd2\x7d\xa9\x21\x68\x4b\x76\xe9\x4c\x6a\xf6\x37\x5d\x55\xea\x0b\xc6\xe3\x19\x49\xfc\x6c\x79\xd1\x0c\xb7\x0a\x8a\x91\x21\xf5\x7e\x03\x32\xcb\x21\xf8\x6d\x0c\xd6\xea\x63\x23\xb3\x65\x33\x8c\x3f\x95\xa4\x4a\xc1\x9a\x72\xb5\x36\x85\x54\x07\xd1\x50\x3c\x85\xd1\xe0\x5d\x29\x68\xbc\xe8\xe0\xb3\x6d\x37\x77\x9b\x58\x1f\x68\xfd\x7f\xc1\xf1\xe0\x38\x60\x3b\x36\xcd\x56\x31\x8f\x2d\x70\x4b\x4c\xfa\x6b\xd6\xb3\x38\xfa\x37\x00\x00\xff\xff\xff\x4a\x4c\xbf\x7c\x0b\x00\x00"

func dataAwsVpcPublicPrivateBuildBuildPythonShTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateBuildBuildPythonShTpl,
		"data/aws-vpc-public-private/build/build-python.sh.tpl",
	)
}

func dataAwsVpcPublicPrivateBuildBuildPythonShTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateBuildBuildPythonShTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/build/build-python.sh.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataAwsVpcPublicPrivateDeployMainTfTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x55\x4d\x6f\x13\x31\x10\xbd\xe7\x57\x8c\x5c\x4e\x88\x6e\x0a\xa7\xaa\x12\xb7\x4a\xdc\xe8\x85\x1b\x42\x2b\xaf\xd7\x09\x56\x1d\xdb\xf2\x47\xd0\x2a\xda\xff\xce\xd8\x8e\xe3\xfd\x48\x5b\x10\x12\xdb\x4b\xfb\xde\x8c\x67\xe6\x3d\x7b\x7a\x03\x5f\xb8\xe2\x96\x7a\xde\x43\x37\xc0\x93\xf7\xfa\x03\xf4\x1a\x94\xf6\xc0\x7b\xe1\xe1\x40\x55\xa0\x52\x0e\x9b\xcd\x91\x5a\x41\x3b\xc9\x81\x08\xb5\xb3\xb4\x15\x3d\x81\xd3\x38\x81\xe9\x2f\xd7\x52\xc6\xb8\x73\xed\x33\x1f\xae\x90\x8e\x33\xcb\xfd\x0b\xa4\xe5\x7b\xa1\xd5\x82\xc0\xd0\x56\xd1\x03\x4f\xf0\x34\xe1\x20\x16\x91\x42\x39\x4f\x15\xe3\xad\x1f\x4c\x0c\x87\x9e\xef\x68\x90\x1e\x3e\x03\xf1\x9f\x9a\x83\x60\x56\x13\x98\x66\x18\x2b\x8e\x38\x77\xeb\x42\xa7\xb0\xab\xd5\x38\x26\x74\x52\xb0\x17\xe9\xa3\x61\x2d\x13\xbd\xbd\x02\x9f\x63\x37\xc6\xea\xa3\xe8\xb9\x4d\x03\x22\xb4\x01\xa8\xfa\xc4\xc6\xde\x9d\x30\xb1\x99\xeb\x36\x12\x0c\xab\x4a\xcd\xc3\x2a\x9e\xc2\xb2\x66\x10\xbf\x59\x58\xc6\x31\x04\x9b\xb0\xdc\xe9\x60\x59\xb5\x20\x58\xe1\x87\x76\x6f\x75\x30\x04\x08\x97\x5d\xee\x2c\xca\x1c\x4f\x39\x9d\xf2\xaf\xe3\x78\x8b\xdc\x6d\x3e\xb4\x38\x9e\xaa\xe6\x11\x6b\xc5\xfc\x37\x52\xc8\xf1\x3d\xd6\x73\xe9\x40\x00\x9c\xdf\x6b\xa6\x65\xee\xef\xf6\x63\x02\x77\x56\x1f\x5a\xa3\xad\x4f\xe0\x5d\xc2\xbc\x2e\x48\xc5\xa2\xb6\x6d\x27\x35\x7b\x76\x88\x7d\x27\x77\x4d\xfa\xd9\xde\x91\x1f\xc8\x8f\xb1\x98\x50\x2f\x57\x23\x9e\x19\x72\xa5\xe0\xfd\xb5\x8a\xf7\x7f\x56\xf2\x6d\x35\xa9\x31\x13\x35\x61\xa1\xe7\x5f\x6a\xf9\xda\x78\xff\x28\x66\x2d\x16\x99\xf1\x3c\xdf\xff\xb4\x6f\xa5\x65\xba\x88\x2b\x01\x2f\xdf\x9b\x4a\xe6\x77\xea\x26\x09\x65\xcc\xe5\x43\xce\xe3\xce\xbd\x2b\xb2\xac\x5d\x6d\xb0\xb1\xa6\x24\x95\x2d\xe3\x66\x45\x62\x52\x61\x1a\x9c\xa0\x79\x7f\x4e\xc0\x8c\x1b\xf8\xf6\xf4\xf8\xf4\x80\x7b\xf4\x99\x83\x14\xce\x73\x85\xbe\x42\xd4\xcb\x01\xd3\x6a\x27\xf6\xc1\xc6\xd5\x81\xb1\x99\xc6\x7d\x91\xf5\x97\x5d\x95\x15\xe6\x37\x35\x52\x13\x77\x16\x37\xfe\xb2\x0b\xd7\x57\xbc\x52\x25\xbd\x26\x26\x53\x6e\xe0\x91\x1b\xa9\x07\xa0\xa8\x90\x07\xbd\xab\x33\x2f\x0c\x2b\xf8\xd4\x35\xdc\xcb\x73\xcf\xce\x3b\xe9\x20\x92\x47\xb3\x25\x5d\xe9\x19\x3c\x31\x33\xbe\x8c\xd9\x39\xab\x95\x9d\x82\xcb\x3f\x89\x45\xd1\x02\xe7\xc7\x14\xef\xfa\xdc\x58\x4c\x7f\xc5\xf5\x68\xe3\xc5\x44\x4f\xf7\xe5\x51\x7c\x5d\xad\xc9\x8b\x74\x3a\x78\x13\x3c\x90\x60\x65\x56\xe3\x48\x65\x48\xc1\x3f\xbd\x37\x0f\xdb\x6d\x2e\x14\xef\x53\x3c\xbd\x57\x2e\xf7\xb7\x8d\x7b\xfa\x77\x00\x00\x00\xff\xff\x11\x23\xa2\xbf\x89\x07\x00\x00"

func dataAwsVpcPublicPrivateDeployMainTfTplBytes() ([]byte, error) {
	return bindataRead(
		_dataAwsVpcPublicPrivateDeployMainTfTpl,
		"data/aws-vpc-public-private/deploy/main.tf.tpl",
	)
}

func dataAwsVpcPublicPrivateDeployMainTfTpl() (*asset, error) {
	bytes, err := dataAwsVpcPublicPrivateDeployMainTfTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/aws-vpc-public-private/deploy/main.tf.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _dataCommonDevVagrantfileTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x6d\x6f\xe3\xb8\x11\xfe\xae\x5f\x31\xa7\xe4\xf6\x05\x88\xa4\x6e\x5a\xf4\x83\x6f\x13\x5c\x2e\x9b\xbb\x04\xd8\xda\x81\x9d\x3b\xa0\x68\x0b\x1f\x2d\xd1\x16\x11\x99\xe4\x92\x94\x13\x9f\xe3\xff\xde\x67\x28\x39\x4e\x7a\xd9\x74\x81\xf5\x86\x1a\x72\xde\x9e\x99\x79\xc8\x03\xfa\x45\x6a\xe9\x44\x90\x15\xcd\xd6\x34\x0a\xc1\x1c\x51\x65\x48\x9b\x40\xb2\x52\xe1\xbb\xe4\x20\x39\xa0\x9b\x5a\x79\xc2\xbf\x50\x4b\xfa\x4d\x2c\x9c\xd0\x61\xae\x1a\x49\x8b\xff\xd5\xa5\xb9\x71\xf1\x54\x25\x57\xb2\x31\x76\x29\x75\x20\x33\x87\x89\xc0\x26\x84\xb5\x8d\x2a\x45\x50\x46\x17\x5e\xba\x95\x2a\x65\x4e\x57\x81\x7c\x6d\xda\xa6\x8a\x4e\x67\x92\x6a\xa1\xab\x8c\x9d\xcb\x2a\xa7\x1b\x43\x4b\x53\xa9\xf9\x9a\xcd\xc2\xce\x13\xf7\x47\xd4\x7a\x19\xbd\x9d\x59\xcb\x82\x3c\x49\xfa\xed\xbc\x34\x7a\xae\x16\xad\x93\xef\xd2\xe3\xf4\x3d\x67\xf4\xd0\x89\x1e\x12\xa2\x6e\x95\xaf\x96\xf9\xcc\xdc\xd3\x09\xa5\xb5\xf0\xb5\x2a\x8d\xb3\x85\x75\xb2\x54\x5e\xfe\xfd\x6f\x69\x82\x83\x07\x74\x69\x3c\x12\xd0\xcd\x9a\xb4\x0c\x77\xc6\xdd\x3e\x53\xef\x65\x94\x5a\xa7\x56\xc0\x61\xda\x0b\xd2\x23\x52\x76\x40\xe9\x66\xc3\x40\x4c\x95\x9d\x8a\xaa\x72\xd2\x7b\xda\x6e\x7b\xc3\x13\x19\x5a\x4b\x82\xfc\x5a\x97\xc0\x6f\x6e\x9a\x4a\x3a\x9a\x3b\xb3\x24\xd3\x3a\x62\x2b\x4a\x2f\xa8\x52\x08\x28\x18\x87\xf4\x0d\x15\xab\x2e\xbb\x67\x31\x74\x06\xa6\xbd\x81\xb7\x70\x69\x45\xa8\xf3\x9d\x81\xed\xf6\xed\x11\xa5\x3b\xcd\xf4\x08\xba\x44\xe6\x0e\x75\x43\x7c\x8f\x52\x5a\x38\xd3\xda\x27\x92\x2e\xc8\x0b\x2d\x66\x28\xf3\x64\x72\x49\x62\xc1\xa5\x44\x79\xef\x84\xab\xd8\xb0\x37\x28\x7f\x08\xbc\xec\xb3\x47\xae\x56\xea\x4a\xea\x52\x49\x1f\x33\xf0\xfb\x48\xbd\xaf\xf3\x5e\x7b\xda\xd9\x3a\xa1\xe0\x5a\xd9\x39\xfa\xd9\xb4\xba\x8a\x7d\x41\xbb\xca\x75\x5f\xef\xd4\x9c\x84\x5e\xbf\xc7\xa9\xcd\xf7\xb1\xbb\x80\x08\x29\x8d\xe5\x4e\x63\x0a\x89\xcf\x81\x33\x7d\xbf\xc5\x31\xde\x47\x49\x0b\x83\x76\x2c\xf6\xa7\x32\x00\x03\xf5\xc6\x18\x9b\x9f\x43\x1a\x00\x16\x17\xe3\x75\x28\xd9\x58\x44\x10\x8b\x67\x47\xad\x33\x2b\xe5\x39\xc2\xd4\xd7\xb2\x69\xb8\xe2\xba\x51\x5a\x02\xc3\xb2\xa2\x83\x0d\x14\xb6\xf4\xe6\x0d\xcd\xd0\x5a\xfd\x67\xb1\x14\x4a\xe7\xbe\x4e\xbb\x64\x00\x15\xe7\x83\xa0\x23\x04\x9f\x8d\xa8\x48\x34\x4d\x2c\xff\xdc\x89\x05\xcf\x8e\xa7\x5a\x3a\x19\xf3\x06\x0a\xcf\x00\xce\xf7\x90\xec\x4e\x33\x2e\xdc\x6f\x7b\xed\x88\x08\x67\xde\x4b\x1e\x9c\x84\x97\xed\xf6\xc5\x08\xae\xb4\x0f\x1c\xc0\xf5\x3a\xd4\x48\x6c\xd6\x2a\xcc\xa4\xd4\x2b\xe5\x8c\x66\xe5\x6f\x05\xe0\xd0\x97\x4e\xd9\x30\xb5\xd1\x4e\x02\x2f\x49\xf2\x5c\x86\x02\x7d\xfc\x38\x39\x1f\x5f\x5d\xdf\x24\x5e\x06\xca\x98\x70\x5a\xdd\x2f\xa5\x73\xf2\x5e\xc5\xa5\x55\x56\xce\x85\x6a\x7a\x71\x70\xa2\x44\xc7\x60\x65\xdc\xbb\xf7\xb4\xe1\x66\x6e\x4c\x29\x1a\x74\x63\xeb\x4a\xc9\x24\x70\x72\xf8\x61\x2f\xe6\x80\xb4\x39\x39\x3c\x66\x91\x2c\x6b\x43\xe9\xc5\x78\x3c\x1a\x93\x08\x74\xb8\xd9\x2b\x6d\x07\x87\x9b\xee\xec\xf6\x07\xfa\x2c\x30\xf3\x8d\x59\xf8\x01\x57\x0a\xa3\x21\x2d\x71\x37\xf1\xfc\xb9\x02\x1b\x85\x5f\x7b\xfc\xa1\x07\x0a\x31\x36\x4d\xc7\x7f\x49\xb6\x09\xa2\xb3\xf4\x36\x06\x47\xe9\xe1\xe6\xa7\xb3\xc9\xe5\x74\x32\xfa\x75\x7c\x7e\xb1\x4d\x59\xf0\xf9\x6a\x78\x31\x1c\x6d\xd3\xb7\x84\x18\x12\x70\x19\x1b\xcd\xe4\xbd\x2c\x07\xc4\xff\xb7\x18\xa1\xd2\x2c\x97\xa0\x3f\xba\x53\xa1\x46\x27\x04\xdb\xc6\x50\x16\x4c\xb1\x58\x32\x43\x56\xca\xdb\x46\xac\x65\x95\x18\xc9\x20\xc0\xf4\x8f\x29\x1d\x9f\xbe\xf9\x80\x80\xe2\x59\x47\x59\xe8\x22\x3e\xa5\x02\x0d\x51\xe8\xb6\x69\x7e\xa0\xed\xa3\x4f\x9c\x1a\xec\xac\x0b\x8c\x2f\x30\xb8\x87\x87\x25\x18\x0a\xb3\x99\x98\x26\xda\xed\xf0\xfa\x17\x6b\xfc\x87\xe0\xa3\xb7\xf0\x0f\x71\x2b\x09\xe5\x01\x01\x84\x1a\x38\xfe\xde\x73\x06\x61\xc4\x7f\xa7\x85\xc1\xec\x77\xac\xd5\x44\xd2\x62\x7e\x06\xb5\xb2\x20\x4e\x51\x67\x15\x33\xf2\xc8\x49\x74\x7a\x8a\x79\xad\xcd\x52\xee\x44\x45\xce\x63\xe3\xca\xf4\x05\x77\x6c\xaf\xef\xa2\x15\x9a\x93\xaf\x25\xd1\x06\xb3\xc4\x94\xa3\xe2\xf0\xd9\x55\xb5\xea\x1d\xe5\xf4\xdc\x32\xba\x39\xb4\xa2\x81\x66\x31\x53\xba\x10\x65\x88\xdc\xf5\x6a\x10\x88\xe2\xbc\x67\x25\xa6\x3b\xa6\xc3\x38\x76\xe8\x13\x60\x0d\x30\x95\x4e\xc0\x53\xdf\x75\xad\x92\xfe\xea\xe5\xa7\xe1\x04\xb5\x4a\xa9\x90\xa1\x2c\x80\x0b\xff\xaa\x69\x37\x3d\x74\xfa\xa4\x26\xc8\x46\x27\xbb\xd6\x7c\xa2\xf8\x40\xbe\xc5\xa5\x15\xa4\xa4\x4c\xfc\x3f\x33\x30\x60\x64\xa7\xd0\xdf\xaa\x5c\x0b\xc2\x85\x13\x84\x0b\xc9\x5c\x61\x64\xee\xad\x71\x81\x3e\x5d\xfc\x74\x75\x36\x9c\xfe\x3c\x1e\x0d\x6f\x2e\x86\x9f\x4e\xb4\xd1\x8a\xa9\x30\xc2\x80\xc9\x32\x0d\xa5\x67\x55\xe4\x77\x61\x03\x2c\x58\xe3\x15\xae\x1f\x26\x74\x6e\xcb\xd6\x32\x9b\xea\x45\x9e\xe7\x69\xb2\xf3\x89\x93\x19\xae\x82\x6e\x53\xfe\x49\xac\x7a\x5a\xc9\xd6\x7d\xdd\x32\x6f\xe6\x01\x17\x81\xcc\x40\x22\x56\xba\xc0\xd6\x5f\x90\x65\x3c\x0c\x28\x33\x1b\xc2\x6c\x69\xcf\x29\x64\x75\x08\xd6\xef\x9d\x54\x55\xc6\xfb\x8f\x91\xae\xa3\x1f\x2b\x06\xf3\x5b\x07\x68\x80\x91\xa8\xbc\x46\x0f\xf9\xaf\xc5\xbb\xc3\xe6\xfa\x9f\x37\x97\xa3\xe1\xf4\xb7\x8b\xf1\xe4\x6a\x34\x3c\xe1\xcb\xbb\x8b\x77\xba\x92\x2e\x32\x5d\xbc\xbc\x19\xa2\x9e\x29\x19\xa6\x9e\x2c\x19\x1c\xdf\x5a\x36\x14\x6f\x44\x51\xde\x62\x92\x7c\xc4\xe9\xdb\xb0\x7f\x05\xb6\xd9\x1f\x8e\x16\x18\x81\xa5\x74\x25\x5a\x10\xbc\x16\xb9\x39\xc3\xb8\x82\x96\xf9\xfb\xdf\x68\x81\x46\xcd\xec\x97\x8c\xef\xc1\x3f\xb0\xfc\xb0\x88\xcb\x57\x60\xed\x75\xfc\x97\x06\x2f\xad\xbf\xc6\xd3\x2c\xea\x72\x3e\x7c\x8e\xc6\xcb\x52\xd6\xf9\x13\x20\xa0\xec\x88\xc6\x7e\xd0\x76\xcd\xf2\xb2\xe5\x8f\xef\xee\x38\xdd\xec\x0b\x65\x23\xca\x28\x96\x77\x50\x14\x33\x63\x82\x67\x46\xcd\xed\xda\x8a\x5c\x99\x02\xa7\x32\x18\xc7\xf7\xfb\x68\x0d\x7e\x76\x18\xed\x7d\x75\xe1\x4c\xfa\x87\x09\x5e\x58\xfb\x2d\xbe\x1d\xbf\xc6\x05\xbb\x10\x9f\x9c\xce\xb2\x2e\xde\x93\xa2\xf5\x2e\x72\xc5\xcb\xf1\xa7\x5f\xb3\x19\x0d\x62\xae\xef\x34\x65\x63\xea\xf7\x07\x3b\xb2\x7c\x45\x2d\xa6\xf0\x94\x70\x7e\x41\xed\xc1\xa4\xfc\xda\x65\xee\xe1\xac\xf9\x1a\x37\x73\xba\xbc\xb9\xb9\x66\x66\xbc\x83\x27\xa1\xbb\x47\x5a\xd6\x3f\xb3\x1e\x9f\x65\x3c\x1b\xcc\x91\xf5\x2e\x4b\xee\xa5\x9e\x44\xb2\x6c\xd1\x98\x19\x3a\xa8\x75\x4d\x9e\x62\xe3\x47\xfc\xea\x76\x86\x07\xf4\x72\x90\xe6\xbd\xab\xd1\x1c\x6f\xe4\xbe\x30\xfb\xfd\x22\x4d\xfa\x3b\xfc\xbf\x01\x00\x00\xff\xff\x0a\x2f\xb4\x25\x46\x0c\x00\x00"

func dataCommonDevVagrantfileTplBytes() ([]byte, error) {
	return bindataRead(
		_dataCommonDevVagrantfileTpl,
		"data/common/dev/Vagrantfile.tpl",
	)
}

func dataCommonDevVagrantfileTpl() (*asset, error) {
	bytes, err := dataCommonDevVagrantfileTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/common/dev/Vagrantfile.tpl", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/aws-simple/build/build-python.sh.tpl": dataAwsSimpleBuildBuildPythonShTpl,
	"data/aws-simple/build/template.json.tpl": dataAwsSimpleBuildTemplateJsonTpl,
	"data/aws-simple/deploy/main.tf.tpl": dataAwsSimpleDeployMainTfTpl,
	"data/aws-vpc-public-private/build/build-python.sh.tpl": dataAwsVpcPublicPrivateBuildBuildPythonShTpl,
	"data/aws-vpc-public-private/deploy/main.tf.tpl": dataAwsVpcPublicPrivateDeployMainTfTpl,
	"data/common/dev/Vagrantfile.tpl": dataCommonDevVagrantfileTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"aws-simple": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"build-python.sh.tpl": &bintree{dataAwsSimpleBuildBuildPythonShTpl, map[string]*bintree{
				}},
				"template.json.tpl": &bintree{dataAwsSimpleBuildTemplateJsonTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsSimpleDeployMainTfTpl, map[string]*bintree{
				}},
			}},
		}},
		"aws-vpc-public-private": &bintree{nil, map[string]*bintree{
			"build": &bintree{nil, map[string]*bintree{
				"build-python.sh.tpl": &bintree{dataAwsVpcPublicPrivateBuildBuildPythonShTpl, map[string]*bintree{
				}},
			}},
			"deploy": &bintree{nil, map[string]*bintree{
				"main.tf.tpl": &bintree{dataAwsVpcPublicPrivateDeployMainTfTpl, map[string]*bintree{
				}},
			}},
		}},
		"common": &bintree{nil, map[string]*bintree{
			"dev": &bintree{nil, map[string]*bintree{
				"Vagrantfile.tpl": &bintree{dataCommonDevVagrantfileTpl, map[string]*bintree{
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

